@import 'theme/variables';
@import 'breakpoints';

.central-content {
  max-width: 1004px;
  margin: auto;
  padding: 2rem 0;

  @media (max-width: 1054px) {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}

$grid-columns: 12;
$grid-gutter: 2rem;

$grid-breakpoints: (
  xs: false,
  sm: 761px,
  md: 1025px,
  lg: 1200px,
  xl: 1400px
);

@mixin grid-breakpoints($breakpoint, $breakpoint-size) {
  @if $breakpoint == xs {
    @content;
  } @else {
    @media only screen and (min-width: $breakpoint-size) { @content; }
  }
}

.grid__row {
  box-sizing: border-box;
  display: flex;
  flex: 0 1 auto;
  flex-direction: row;
  flex-wrap: wrap;
  margin-right: ($grid-gutter / -2);
  margin-left: ($grid-gutter / -2);

  &--reverse { flex-direction: row-reverse; }
  &--padded { padding: $baseline-increment 0; }
}

.grid__col {
  &--core-width {
    flex-basis: 100%;
    max-width: 1004px;
  }

  &--reverse {
    flex-direction: column-reverse;
  }
}

@each $breakpoint, $breakpoint-size in $grid-breakpoints {
  @include grid-breakpoints($breakpoint, $breakpoint-size) {
    $col-selectors: ('.grid__col--#{$breakpoint}');

    @for $col from 1 through $grid-columns {
      $col-selector: unquote('.grid__col--#{$breakpoint}-#{$col}');
      $col-selectors: append($col-selectors, $col-selector, comma);
    }

    @for $col from 1 through $grid-columns {
      $col-offset-selector: unquote('.grid__col--#{$breakpoint}-offset-#{$col}');
      $col-selectors: append($col-selectors, $col-offset-selector, comma);
    }

    #{$col-selectors} {
      box-sizing: border-box;
      flex: 0 0 auto;
      padding-right: ($grid-gutter / 2);
      padding-left: ($grid-gutter / 2);
    }

    .grid__col {
      &--#{$breakpoint} {
        flex-grow: 1;
        flex-basis: 0;
        max-width: 100%;
        @for $col from 1 through $grid-columns {
          &-#{$col} {
            flex-basis: (100% / $grid-columns) * $col;
            max-width: (100% / $grid-columns) * $col;
          }
        }

        @for $col from 1 through $grid-columns {
          &-offset-#{$col} {
            margin-left: (100% / $grid-columns) * $col;
          }
        }
      }
    }

    .grid {
      &__row {
        &--#{$breakpoint}-start {
          justify-content: flex-start;
          text-align: start;
        }

        &--#{$breakpoint}-center {
          justify-content: center;
        }

        &--#{$breakpoint}-end {
          justify-content: flex-end;
          text-align: end;
        }

        &--#{$breakpoint}-top {
          align-items: flex-start;
        }

        &--#{$breakpoint}-middle {
          align-items: center;
        }

        &--#{$breakpoint}-bottom {
          align-items: flex-end;
        }

        &--#{$breakpoint}-around {
          justify-content: space-around;
        }

        &--#{$breakpoint}-between {
          justify-content: space-between;
        }
      }

      &__col {
        &--#{$breakpoint}-first { order: -1;}

        &--#{$breakpoint}-last { order: 1; }
      }
    }
  }
}

.grid--center { margin: 0 auto; }

.grid {
  width: 100%;
}

.grid--hugged {
  padding-right: 0;
  padding-left: 0;
  width: 100%;
}
