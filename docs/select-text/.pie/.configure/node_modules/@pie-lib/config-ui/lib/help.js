'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HelpDialog = exports.HelpButton = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Dialog = require('@material-ui/core/Dialog');

var _Dialog2 = _interopRequireDefault(_Dialog);

var _DialogTitle = require('@material-ui/core/DialogTitle');

var _DialogTitle2 = _interopRequireDefault(_DialogTitle);

var _DialogContentText = require('@material-ui/core/DialogContentText');

var _DialogContentText2 = _interopRequireDefault(_DialogContentText);

var _DialogContent = require('@material-ui/core/DialogContent');

var _DialogContent2 = _interopRequireDefault(_DialogContent);

var _DialogActions = require('@material-ui/core/DialogActions');

var _DialogActions2 = _interopRequireDefault(_DialogActions);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Button = require('@material-ui/core/Button');

var _Button2 = _interopRequireDefault(_Button);

var _Help = require('@material-ui/icons/Help');

var _Help2 = _interopRequireDefault(_Help);

var _IconButton = require('@material-ui/core/IconButton');

var _IconButton2 = _interopRequireDefault(_IconButton);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _styles = require('@material-ui/core/styles');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RawHelpButton = function RawHelpButton(_ref) {
  var onClick = _ref.onClick,
      classes = _ref.classes;
  return _react2.default.createElement(
    _IconButton2.default,
    {
      classes: {
        label: classes.icon
      },
      onClick: onClick
    },
    _react2.default.createElement(_Help2.default, null)
  );
};
RawHelpButton.propTypes = {
  onClick: _propTypes2.default.func,
  classes: _propTypes2.default.object.isRequired
};

var HelpButton = exports.HelpButton = (0, _styles.withStyles)({
  icon: {
    '&:hover': {
      color: '#ddd'
    }
  }
})(RawHelpButton);

var HelpDialog = exports.HelpDialog = function HelpDialog(_ref2) {
  var open = _ref2.open,
      onClose = _ref2.onClose,
      children = _ref2.children,
      title = _ref2.title;
  return _react2.default.createElement(
    _Dialog2.default,
    { open: open, onRequestClose: onClose },
    _react2.default.createElement(
      _DialogTitle2.default,
      null,
      title
    ),
    _react2.default.createElement(
      _DialogContent2.default,
      null,
      _react2.default.createElement(
        _DialogContentText2.default,
        null,
        children
      )
    ),
    _react2.default.createElement(
      _DialogActions2.default,
      null,
      _react2.default.createElement(
        _Button2.default,
        { onClick: onClose, color: 'primary' },
        'OK'
      )
    )
  );
};

HelpDialog.propTypes = {
  open: _propTypes2.default.bool,
  onClose: _propTypes2.default.func,
  children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]).isRequired,
  title: _propTypes2.default.string.isRequired
};

var Help = function (_React$Component) {
  _inherits(Help, _React$Component);

  function Help(props) {
    _classCallCheck(this, Help);

    var _this = _possibleConstructorReturn(this, (Help.__proto__ || Object.getPrototypeOf(Help)).call(this, props));

    _this.state = {
      open: false
    };
    return _this;
  }

  _createClass(Help, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          children = _props.children,
          title = _props.title;

      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(HelpButton, {
          color: 'accent',
          onClick: function onClick() {
            return _this2.setState({ open: true });
          }
        }),
        _react2.default.createElement(
          HelpDialog,
          {
            open: this.state.open,
            title: title,
            onClose: function onClose() {
              return _this2.setState({ open: false });
            }
          },
          children
        )
      );
    }
  }]);

  return Help;
}(_react2.default.Component);

Help.propTypes = {
  children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]).isRequired,
  title: _propTypes2.default.string
};
exports.default = Help;