'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _piePlayerEvents = require('@pie-framework/pie-player-events');

var _main = require('./main');

var _main2 = _interopRequireDefault(_main);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class SelectText extends HTMLElement {
  constructor() {
    super();
  }

  set model(m) {
    this._model = m;

    this.render();
    this.dispatchEvent(new _piePlayerEvents.ModelSetEvent(this.tagName.toLowerCase(), this.isSessionComplete(), this._model !== undefined));
  }

  set session(s) {
    this._session = s;
    if (!Array.isArray(this._session.selectedTokens)) {
      this._session.selectedTokens = [];
    }
    this.render();
  }

  isSessionComplete() {
    var _ref = this._session || {};

    const selectedTokens = _ref.selectedTokens;

    return Array.isArray(selectedTokens) && selectedTokens.length > 0;
  }

  selectionChanged(selection) {
    this._session.selectedTokens = selection;

    this.dispatchEvent(new _piePlayerEvents.SessionChangedEvent(this.tagName.toLowerCase(), this.isSessionComplete()));
  }

  connectedCallback() {
    this.render();
  }

  render() {
    if (this._model && this._session) {
      const el = _react2.default.createElement(_main2.default, {
        model: this._model,
        session: this._session,
        onSelectionChange: this.selectionChanged.bind(this)
      });
      _reactDom2.default.render(el, this);
    }
  }
}
exports.default = SelectText;