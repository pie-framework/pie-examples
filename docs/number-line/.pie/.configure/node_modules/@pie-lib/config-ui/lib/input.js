'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Input = require('@material-ui/core/Input');

var _Input2 = _interopRequireDefault(_Input);

var _inputContainer = require('./input-container');

var _inputContainer2 = _interopRequireDefault(_inputContainer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Input = function (_React$Component) {
  _inherits(Input, _React$Component);

  function Input(props) {
    _classCallCheck(this, Input);

    var _this = _possibleConstructorReturn(this, (Input.__proto__ || Object.getPrototypeOf(Input)).call(this, props));

    _this.onChange = function (event) {
      var _this$props = _this.props,
          type = _this$props.type,
          onChange = _this$props.onChange,
          error = _this$props.error;

      var value = event.target.value;

      if (error(value, type)) {
        _this.setState({
          error: true,
          value: event.target.value
        });
      } else {
        _this.setState({
          error: false,
          value: event.target.value
        });

        onChange(event);
      }
    };

    _this.state = {
      value: props.value
    };
    return _this;
  }

  _createClass(Input, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(newProps) {
      this.setState({
        value: newProps.value
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          label = _props.label,
          type = _props.type,
          noModelUpdateOnError = _props.noModelUpdateOnError,
          rest = _objectWithoutProperties(_props, ['label', 'type', 'noModelUpdateOnError']);

      var _state = this.state,
          value = _state.value,
          error = _state.error;


      return label ? React.createElement(
        _inputContainer2.default,
        { label: label },
        React.createElement(_Input2.default, _extends({
          type: type
        }, rest, {
          value: value,
          onChange: this.onChange,
          error: error
        }))
      ) : React.createElement(_Input2.default, _extends({
        type: type
      }, rest, {
        value: value,
        onChange: this.onChange,
        error: error
      }));
    }
  }]);

  return Input;
}(React.Component);

Input.propTypes = {
  value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  onChange: _propTypes2.default.func.isRequired,
  label: _propTypes2.default.string,
  type: _propTypes2.default.string.isRequired,
  error: _propTypes2.default.func,
  noModelUpdateOnError: _propTypes2.default.bool
};
Input.defaultProps = {
  type: 'text',
  error: function error(value, type) {
    return type === 'number' ? !value || isNaN(value) : !value;
  },
  noModelUpdateOnError: false
};
exports.default = Input;