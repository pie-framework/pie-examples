'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TableToolbar = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _styles = require('@material-ui/core/styles');

var _toolbarButtons = require('../toolbar/toolbar-buttons');

var _doneButton = require('../toolbar/done-button');

var _BorderAll = require('@material-ui/icons/BorderAll');

var _BorderAll2 = _interopRequireDefault(_BorderAll);

var _toolbar = require('../toolbar/toolbar');

var _icons = require('./icons');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _debug = require('debug');

var _debug2 = _interopRequireDefault(_debug);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var log = (0, _debug2.default)('@pie-lib:editable-html:plugins:table-toolbar');

var TableToolbar = exports.TableToolbar = function (_React$Component) {
  _inherits(TableToolbar, _React$Component);

  function TableToolbar() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, TableToolbar);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = TableToolbar.__proto__ || Object.getPrototypeOf(TableToolbar)).call.apply(_ref, [this].concat(args))), _this), _this.onDone = function (e) {
      var onDone = _this.props.onDone;

      e.preventDefault();
      onDone();
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(TableToolbar, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          plugins = _props.plugins,
          value = _props.value,
          onChange = _props.onChange,
          onAddRow = _props.onAddRow,
          onRemoveRow = _props.onRemoveRow,
          onAddColumn = _props.onAddColumn,
          onRemoveColumn = _props.onRemoveColumn,
          onRemoveTable = _props.onRemoveTable,
          onToggleBorder = _props.onToggleBorder,
          hasBorder = _props.hasBorder,
          classes = _props.classes;

      log('[render] hasBorder:', hasBorder);

      return _react2.default.createElement(
        'div',
        { className: classes.tableToolbar },
        _react2.default.createElement(
          'div',
          null,
          _react2.default.createElement(
            _toolbarButtons.Button,
            { onClick: onAddRow },
            _react2.default.createElement(_icons.AddRow, null)
          ),
          _react2.default.createElement(
            _toolbarButtons.Button,
            { onClick: onRemoveRow },
            _react2.default.createElement(_icons.RemoveRow, null)
          ),
          _react2.default.createElement(
            _toolbarButtons.Button,
            { onClick: onAddColumn },
            _react2.default.createElement(_icons.AddColumn, null)
          ),
          _react2.default.createElement(
            _toolbarButtons.Button,
            { onClick: onRemoveColumn },
            _react2.default.createElement(_icons.RemoveColumn, null)
          ),
          _react2.default.createElement(
            _toolbarButtons.Button,
            { onClick: onRemoveTable },
            _react2.default.createElement(_icons.RemoveTable, null)
          ),
          plugins.map(function (p, index) {
            return _react2.default.createElement(_toolbar.ToolbarButton, _extends({
              key: 'plugin-' + index
            }, p.toolbar, {
              value: value,
              onChange: onChange
            }));
          }),
          _react2.default.createElement(
            _toolbarButtons.Button,
            { onClick: onToggleBorder, active: hasBorder },
            _react2.default.createElement(_BorderAll2.default, null)
          )
        ),
        _react2.default.createElement(_doneButton.DoneButton, { onClick: this.onDone })
      );
    }
  }]);

  return TableToolbar;
}(_react2.default.Component);

TableToolbar.propTypes = {
  plugins: _propTypes2.default.array.isRequired,
  value: _propTypes2.default.object.isRequired,
  onChange: _propTypes2.default.func.isRequired,
  onAddRow: _propTypes2.default.func.isRequired,
  onRemoveRow: _propTypes2.default.func.isRequired,
  onAddColumn: _propTypes2.default.func.isRequired,
  onRemoveColumn: _propTypes2.default.func.isRequired,
  onRemoveTable: _propTypes2.default.func.isRequired,
  onToggleBorder: _propTypes2.default.func.isRequired,
  hasBorder: _propTypes2.default.bool,
  onDone: _propTypes2.default.func.isRequired,
  classes: _propTypes2.default.object.isRequired
};
TableToolbar.defaultProps = {
  plugins: [],
  value: {},
  onChange: function onChange() {}
};


var styles = function styles() {
  return {
    tableToolbar: {
      width: '100%',
      display: 'flex',
      justifyContent: 'space-between'
    }
  };
};
exports.default = (0, _styles.withStyles)(styles)(TableToolbar);