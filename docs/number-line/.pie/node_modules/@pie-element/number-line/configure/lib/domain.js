'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Domain = undefined;

var _numberTextField = require('./number-text-field');

var _numberTextField2 = _interopRequireDefault(_numberTextField);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const DOMAIN_BEGIN = 'domainBegin';
const DOMAIN_END = 'domainEnd';

class Domain extends _react2.default.Component {

  constructor(props) {
    super(props);
    this.onDomainBeginChange = this.onDomainValueChange.bind(this, DOMAIN_BEGIN);
    this.onDomainEndChange = this.onDomainValueChange.bind(this, DOMAIN_END);
  }

  onDomainValueChange(key, event, value) {
    var _props = this.props;
    const onChange = _props.onChange,
          domain = _props.domain;


    const d = [domain[0], domain[1]];

    if (value === undefined) {
      return;
    }

    let newValue = parseInt(value, 10);
    if (key === DOMAIN_BEGIN) {
      d[0] = newValue;
    } else {
      d[1] = newValue;
    }
    //Make sure that d[0] < d[1]
    d.sort();
    const out = d[0] > d[1] ? [d[1], d[0]] : d;
    onChange(out);
  }

  render() {
    const domain = this.props.domain;


    return _react2.default.createElement(
      'div',
      null,
      'Domain =',
      _react2.default.createElement(_numberTextField2.default, {
        value: domain[0],
        name: DOMAIN_BEGIN,
        onChange: this.onDomainBeginChange
      }),
      ' ',
      'to',
      _react2.default.createElement(_numberTextField2.default, {
        value: domain[1],
        name: DOMAIN_END,
        onChange: this.onDomainEndChange
      })
    );
  }
}
exports.Domain = Domain;
Domain.propTypes = {
  domain: _propTypes2.default.arrayOf(_propTypes2.default.number),
  onChange: _propTypes2.default.func.isRequired
};
exports.default = Domain;