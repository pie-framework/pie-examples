'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _icons = require('@pie-lib/icons');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactTransitionGroup = require('react-transition-group');

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _reactJss = require('react-jss');

var _reactJss2 = _interopRequireDefault(_reactJss);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

let getIcon = t => {
  switch (t) {
    case 'unanswered':
      return _icons.NothingSubmitted;
    case 'correct':
      return _icons.Correct;
    case 'incorrect':
      return _icons.Incorrect;
    case 'partial':
      return _icons.PartiallyCorrect;
    case 'info':
      return _icons.ShowRationale;
    default:
      return undefined;
  }
};

const Feedback = props => {
  const classes = props.classes,
        type = props.type;

  let className = (0, _classnames2.default)(classes[type], classes.feedback);
  let Icon = getIcon(props.type);

  return _react2.default.createElement(
    _reactTransitionGroup.TransitionGroup,
    null,
    _react2.default.createElement(
      _reactTransitionGroup.CSSTransition,
      { classNames: 'fb', key: 'fb', timeout: 300 },
      _react2.default.createElement(
        'div',
        { key: 'panel', className: className, style: { width: props.width } },
        _react2.default.createElement(Icon, { iconSet: 'emoji', shape: 'square' }),
        _react2.default.createElement('span', {
          className: 'message',
          dangerouslySetInnerHTML: { __html: props.message }
        })
      )
    )
  );
};

Feedback.propTypes = {
  width: _propTypes2.default.number,
  message: _propTypes2.default.string,
  classes: _propTypes2.default.object.isRequired,
  type: _propTypes2.default.string
};

const styles = {
  feedback: {
    marginTop: '10px',
    backgroundColor: '#dddddd',
    padding: '10px',
    display: 'flex',
    alignItems: 'center',
    '& svg': {
      height: '30px'
    },
    '& message': {
      paddingLeft: '5px'
    },
    '& h1': {
      padding: '0px',
      margin: '0px'
    }
  },
  correct: {
    backgroundColor: 'var(--number-line-correct-bg, green)'
  },
  incorrect: {
    backgroundColor: 'var(--number-line-incorrect-bg, orange)'
  }
};

exports.default = (0, _reactJss2.default)(styles)(Feedback);