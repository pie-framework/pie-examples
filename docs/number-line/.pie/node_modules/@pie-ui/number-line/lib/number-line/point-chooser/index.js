'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PointChooser = exports.Point = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _reactJss = require('react-jss');

var _reactJss2 = _interopRequireDefault(_reactJss);

var _styles = require('./styles');

var _styles2 = _interopRequireDefault(_styles);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const DeleteIcon = ({ classes }) => {
  return _react2.default.createElement(
    'svg',
    {
      className: classes.deleteIcon,
      fill: '#000000',
      height: '24',
      viewBox: '0 0 24 24',
      width: '24',
      xmlns: 'http://www.w3.org/2000/svg'
    },
    _react2.default.createElement('path', { d: 'M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z' }),
    _react2.default.createElement('path', { d: 'M0 0h24v24H0z', fill: 'none' })
  );
};

DeleteIcon.propTypes = {
  classes: _propTypes2.default.object
};

const RawPoint = props => {
  const iconKey = props.iconKey,
        active = props.active,
        classes = props.classes,
        onClick = props.onClick;

  const names = (0, _classnames2.default)(classes[iconKey], { active });
  return _react2.default.createElement(
    'span',
    { role: 'presentation', key: iconKey, onClick: onClick },
    _react2.default.createElement(
      'a',
      { className: names },
      '\xA0'
    )
  );
};

RawPoint.propTypes = {
  iconKey: _propTypes2.default.string.isRequired,
  active: _propTypes2.default.bool,
  classes: _propTypes2.default.object,
  onClick: _propTypes2.default.func
};

const Point = exports.Point = (0, _reactJss2.default)(_styles2.default)(RawPoint);

const Points = ({ selectPoint, classes, selected, icons }) => {
  const iconTags = icons.map(key => {
    let active = key === selected;
    let onClick = active ? () => {} : selectPoint.bind(null, key);
    return _react2.default.createElement(Point, {
      key: key.toLowerCase(),
      iconKey: key.toLowerCase(),
      active: active,
      onClick: onClick
    }); //icon(key, active);
  });

  return _react2.default.createElement(
    'div',
    { className: classes.elementSelector },
    iconTags
  );
};

Points.propTypes = {
  selectPoint: _propTypes2.default.func.isRequired,
  classes: _propTypes2.default.object.isRequired,
  selected: _propTypes2.default.string,
  icons: _propTypes2.default.array
};

class PointChooser extends _react2.default.Component {

  render() {
    var _props = this.props;
    const elementType = _props.elementType,
          showDeleteButton = _props.showDeleteButton,
          onDeleteClick = _props.onDeleteClick,
          icons = _props.icons,
          classes = _props.classes,
          onElementType = _props.onElementType;


    return _react2.default.createElement(
      'div',
      { className: classes.pointChooser },
      _react2.default.createElement(Points, {
        selected: elementType,
        classes: classes,
        selectPoint: onElementType,
        icons: icons
      }),
      showDeleteButton && _react2.default.createElement(
        'span',
        { className: classes.deleteIconHolder, onClick: onDeleteClick },
        _react2.default.createElement(DeleteIcon, { classes: classes })
      )
    );
  }
}

exports.PointChooser = PointChooser;
PointChooser.defaultProps = {
  showDeleteButton: false,
  elementType: PointChooser.DEFAULT_TYPE,
  icons: ['pf', 'pe', 'lff', 'lef', 'lfe', 'lee', 'rfn', 'rfp', 'ren', 'rep']
};
PointChooser.propTypes = {
  classes: _propTypes2.default.object.isRequired,
  elementType: _propTypes2.default.string,
  showDeleteButton: _propTypes2.default.bool,
  onDeleteClick: _propTypes2.default.func.isRequired,
  onElementType: _propTypes2.default.func.isRequired,
  icons: _propTypes2.default.array
};
exports.default = (0, _reactJss2.default)(_styles2.default)(PointChooser);


PointChooser.DEFAULT_TYPE = 'pf';