'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _styles = require('@material-ui/core/styles');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Popover = require('@material-ui/core/Popover');

var _Popover2 = _interopRequireDefault(_Popover);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _hints = require('./hints');

var _hints2 = _interopRequireDefault(_hints);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const styles = theme => ({
  hintsPopover: {
    marginTop: theme.spacing.unit * 2,
    pointerEvents: 'none'
  }
});

class HintsPopover extends _react2.default.Component {

  render() {
    var _props = this.props;
    const className = _props.className,
          classes = _props.classes,
          hintsOpen = _props.hintsOpen,
          hintsAnchorEl = _props.hintsAnchorEl,
          anchorReference = _props.anchorReference;


    return _react2.default.createElement(
      _Popover2.default,
      {
        className: (0, _classnames2.default)(classes.hintsPopover, className),
        open: hintsOpen,
        anchorEl: hintsAnchorEl,
        anchorReference: anchorReference,
        onClose: this.handleHintsPopoverClose,
        anchorOrigin: {
          vertical: 'bottom',
          horizontal: 'center'
        },
        transformOrigin: {
          vertical: 'top',
          horizontal: 'center'
        },
        disableAutoFocus: true,
        disableRestoreFocus: true,
        disableEnforceFocus: true
      },
      _react2.default.createElement(_hints2.default, null)
    );
  }
}

HintsPopover.propTypes = {
  classes: _propTypes2.default.object.isRequired,
  hintsOpen: _propTypes2.default.bool.isRequired,
  className: _propTypes2.default.string,
  hintsAnchorEl: _propTypes2.default.any,
  anchorReference: _propTypes2.default.any
};
HintsPopover.defaultProps = {
  className: ''
};
exports.default = (0, _styles.withStyles)(styles)(HintsPopover);