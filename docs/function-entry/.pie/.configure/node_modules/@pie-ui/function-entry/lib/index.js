'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HintsPopover = exports.Radical = exports.Power = exports.Fraction = exports.Hints = undefined;

var _piePlayerEvents = require('@pie-framework/pie-player-events');

var _functionEntry = require('./function-entry');

var _functionEntry2 = _interopRequireDefault(_functionEntry);

var _hintsPopover = require('./hints-popover');

var _hintsPopover2 = _interopRequireDefault(_hintsPopover);

var _hints = require('./hints');

var _hints2 = _interopRequireDefault(_hints);

var _fraction = require('./fraction');

var _fraction2 = _interopRequireDefault(_fraction);

var _power = require('./power');

var _power2 = _interopRequireDefault(_power);

var _radical = require('./radical');

var _radical2 = _interopRequireDefault(_radical);

var _debug = require('debug');

var _debug2 = _interopRequireDefault(_debug);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const log = (0, _debug2.default)('pie-elements:function-entry');

exports.Hints = _hints2.default;
exports.Fraction = _fraction2.default;
exports.Power = _power2.default;
exports.Radical = _radical2.default;
exports.HintsPopover = _hintsPopover2.default;
class FunctionEntry extends HTMLElement {
  constructor() {
    super();
  }

  set model(m) {
    this._model = m;
    this.dispatchEvent(new _piePlayerEvents.ModelSetEvent(this.tagName.toLowerCase(), false, !!this._model));

    this.render();
  }

  set session(s) {
    this._session = s;
    this.render();
  }

  onValueChanged(value) {
    this._session.value = value;

    log('[onSessionChanged] session: ', this._session);

    this.dispatchEvent(new _piePlayerEvents.SessionChangedEvent(this.tagName.toLowerCase(), true));
  }

  connectedCallback() {
    this.render();
  }

  render() {
    if (this._model && this._session) {
      const e = _react2.default.createElement(_functionEntry2.default, {
        model: this._model,
        session: this._session,
        onValueChanged: this.onValueChanged.bind(this)
      });

      _reactDom2.default.render(e, this, () => {
        log('render completed');
      });
    }
  }
}
exports.default = FunctionEntry;