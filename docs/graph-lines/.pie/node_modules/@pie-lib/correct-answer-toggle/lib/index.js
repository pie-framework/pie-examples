'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CorrectAnswerToggle = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _styles = require('./styles');

var _styles2 = _interopRequireDefault(_styles);

var _styles3 = require('@material-ui/core/styles');

var _CSSTransition = require('react-transition-group/CSSTransition');

var _CSSTransition2 = _interopRequireDefault(_CSSTransition);

var _icons = require('@pie-lib/icons');

var _expander = require('./expander');

var _expander2 = _interopRequireDefault(_expander);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * We export the raw unstyled class for testability. For public use please use the default export.
 */
var CorrectAnswerToggle = exports.CorrectAnswerToggle = function (_React$Component) {
  _inherits(CorrectAnswerToggle, _React$Component);

  function CorrectAnswerToggle(props) {
    _classCallCheck(this, CorrectAnswerToggle);

    var _this = _possibleConstructorReturn(this, (CorrectAnswerToggle.__proto__ || Object.getPrototypeOf(CorrectAnswerToggle)).call(this, props));

    _this.state = {
      show: props.show
    };
    return _this;
  }

  _createClass(CorrectAnswerToggle, [{
    key: 'onClick',
    value: function onClick() {
      this.props.onToggle(!this.props.toggled);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      this.setState({
        show: nextProps.show
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          classes = _props.classes,
          className = _props.className;


      return _react2.default.createElement(
        'div',
        { className: (0, _classnames2.default)(classes.root, className) },
        _react2.default.createElement(
          _expander2.default,
          { show: this.state.show, className: classes.expander },
          _react2.default.createElement(
            'div',
            { className: classes.content, onClick: this.onClick.bind(this) },
            _react2.default.createElement(
              'div',
              { className: classes.iconHolder },
              _react2.default.createElement(
                _CSSTransition2.default,
                {
                  timeout: 400,
                  'in': this.props.toggled,
                  classNames: classes
                },
                _react2.default.createElement(_icons.CorrectResponse, {
                  open: true,
                  key: 'correct-open',
                  className: classes.icon
                })
              ),
              _react2.default.createElement(
                _CSSTransition2.default,
                {
                  timeout: 5000,
                  'in': !this.props.toggled,
                  classNames: classes
                },
                _react2.default.createElement(_icons.CorrectResponse, {
                  open: false,
                  key: 'correct-closed',
                  className: classes.icon
                })
              )
            ),
            _react2.default.createElement(
              'div',
              { className: classes.label },
              this.props.toggled ? this.props.hideMessage : this.props.showMessage
            )
          )
        )
      );
    }
  }]);

  return CorrectAnswerToggle;
}(_react2.default.Component);

CorrectAnswerToggle.propTypes = {
  onToggle: _propTypes2.default.func,
  toggled: _propTypes2.default.bool,
  show: _propTypes2.default.bool,
  hideMessage: _propTypes2.default.string,
  showMessage: _propTypes2.default.string,
  classes: _propTypes2.default.object.isRequired,
  className: _propTypes2.default.string
};
CorrectAnswerToggle.defaultProps = {
  showMessage: 'Show correct answer',
  hideMessage: 'Hide correct answer',
  show: false,
  toggled: false
};
exports.default = (0, _styles3.withStyles)(_styles2.default)(CorrectAnswerToggle);