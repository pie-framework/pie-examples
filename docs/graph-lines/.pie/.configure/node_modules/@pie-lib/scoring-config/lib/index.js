'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PartialScoringConfig = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _scoringConfigRows = require('./scoring-config-rows');

var _scoringConfigRows2 = _interopRequireDefault(_scoringConfigRows);

var _Typography = require('@material-ui/core/Typography');

var _Typography2 = _interopRequireDefault(_Typography);

var _styles = require('@material-ui/core/styles');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var emptyStyles = {
  root: {
    padding: '20px'
  }
};

var Empty = (0, _styles.withStyles)(emptyStyles)(function (_ref) {
  var classes = _ref.classes;
  return _react2.default.createElement(
    'div',
    { className: classes.root },
    _react2.default.createElement(
      _Typography2.default,
      { type: 'caption' },
      'You must have more than 1 correct response to set up partial scoring'
    )
  );
});

var PartialScoringConfig = exports.PartialScoringConfig = function (_React$Component) {
  _inherits(PartialScoringConfig, _React$Component);

  function PartialScoringConfig() {
    _classCallCheck(this, PartialScoringConfig);

    return _possibleConstructorReturn(this, (PartialScoringConfig.__proto__ || Object.getPrototypeOf(PartialScoringConfig)).apply(this, arguments));
  }

  _createClass(PartialScoringConfig, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          numberOfCorrectResponses = _props.numberOfCorrectResponses,
          partialScoring = _props.partialScoring,
          classes = _props.classes,
          onChange = _props.onChange;


      return _react2.default.createElement(
        'div',
        { className: classes.scoringConfig },
        _react2.default.createElement(
          _Typography2.default,
          { type: 'subheading' },
          'Partial Scoring Rules'
        ),
        _react2.default.createElement('br', null),
        _react2.default.createElement(
          _Typography2.default,
          null,
          'If there is more than one correct answer to this question, you may allow partial credit based on the number of correct answers submitted. This is optional.'
        ),
        _react2.default.createElement('br', null),
        numberOfCorrectResponses > 1 ? _react2.default.createElement(_scoringConfigRows2.default, {
          numberOfCorrectResponses: numberOfCorrectResponses,
          partialScoring: partialScoring,
          onChange: onChange
        }) : _react2.default.createElement(Empty, null)
      );
    }
  }]);

  return PartialScoringConfig;
}(_react2.default.Component);

PartialScoringConfig.propTypes = {
  numberOfCorrectResponses: _propTypes2.default.number,
  partialScoring: _propTypes2.default.array,
  classes: _propTypes2.default.object.isRequired,
  onChange: _propTypes2.default.func
};
exports.default = (0, _styles.withStyles)({
  scoringConfig: {
    paddingTop: '10px'
  }
})(PartialScoringConfig);