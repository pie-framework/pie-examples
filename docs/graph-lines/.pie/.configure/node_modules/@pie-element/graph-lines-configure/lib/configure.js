'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _styles = require('@material-ui/core/styles');

var _chartingConfig = require('@pie-lib/charting-config');

var _chartingConfig2 = _interopRequireDefault(_chartingConfig);

var _configUi = require('@pie-lib/config-ui');

var _scoringConfig = require('@pie-lib/scoring-config');

var _scoringConfig2 = _interopRequireDefault(_scoringConfig);

var _reactSwipeableViews = require('react-swipeable-views');

var _reactSwipeableViews2 = _interopRequireDefault(_reactSwipeableViews);

var _Tabs = require('@material-ui/core/Tabs');

var _Tabs2 = _interopRequireDefault(_Tabs);

var _Tab = require('@material-ui/core/Tab');

var _Tab2 = _interopRequireDefault(_Tab);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _debug = require('debug');

var _debug2 = _interopRequireDefault(_debug);

var _Typography = require('@material-ui/core/Typography');

var _Typography2 = _interopRequireDefault(_Typography);

var _generalConfigBlock = require('./general-config-block');

var _generalConfigBlock2 = _interopRequireDefault(_generalConfigBlock);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var log = (0, _debug2.default)('@pie-element:graph-lines:configure');

var styles = function styles(theme) {
  return {
    title: {
      fontSize: '1.1rem',
      display: 'block',
      marginTop: theme.spacing.unit * 2,
      marginBottom: theme.spacing.unit
    },
    content: {
      marginTop: theme.spacing.unit * 2
    }
  };
};

var Configure = function (_React$Component) {
  _inherits(Configure, _React$Component);

  function Configure(props) {
    _classCallCheck(this, Configure);

    var _this = _possibleConstructorReturn(this, (Configure.__proto__ || Object.getPrototypeOf(Configure)).call(this, props));

    _this.onTabChange = function (event, value) {
      _this.setState({ activeTab: value });
    };

    _this.onChangeTabIndex = function (index) {
      _this.setState({ activeTab: index });
    };

    _this.resetToDefaults = function () {
      _this.props.onModelChanged(JSON.parse(JSON.stringify(_this.defaults)));
    };

    _this.onChange = function (config) {
      _this.props.model.model.config = _extends({}, config);

      _this.props.onModelChanged(_this.props.model);
    };

    _this.onFeedbackChange = function (feedback) {
      var _this$props = _this.props,
          model = _this$props.model,
          onModelChanged = _this$props.onModelChanged;

      model.feedback = feedback;
      onModelChanged(model);
    };

    _this.onAddLine = function () {
      var model = _this.props.model;

      var newConfig = _extends({}, model.model.config, {
        lines: model.model.config.lines.concat({ initialView: '', correctLine: '', label: '' })
      });

      _this.onChange(newConfig);
    };

    _this.onMultipleToggle = function (event) {
      var _this$props2 = _this.props,
          model = _this$props2.model,
          onModelChanged = _this$props2.onModelChanged;


      model.multiple = event.target.checked;

      if (!model.multiple && model.model.config.lines.length > 1) {
        model.model.config.lines.length = 1;
      }

      onModelChanged(model);
    };

    _this.onPartialScoringChange = function (partialScoring) {
      _this.props.model.partialScoring = partialScoring.map(function (partialScore) {
        return {
          numberOfCorrect: partialScore.numberOfCorrect || '',
          scorePercentage: partialScore.scorePercentage || ''
        };
      });

      _this.props.onModelChanged(_this.props.model);
    };

    _this.defaults = JSON.parse(JSON.stringify(props.model));

    _this.state = {
      activeTab: 0
    };
    return _this;
  }

  _createClass(Configure, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          classes = _props.classes,
          model = _props.model;

      var config = model.model.config;

      log('[render] model', model);

      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          _Tabs2.default,
          {
            value: this.state.activeTab,
            onChange: this.onTabChange,
            indicatorColor: 'primary',
            textColor: 'primary',
            fullWidth: true
          },
          _react2.default.createElement(_Tab2.default, { label: 'Design' }),
          _react2.default.createElement(_Tab2.default, { disabled: !model.multiple, label: 'Scoring' })
        ),
        _react2.default.createElement(
          _reactSwipeableViews2.default,
          {
            axis: 'x',
            index: this.state.activeTab,
            onChangeIndex: this.onChangeTabIndex
          },
          _react2.default.createElement(
            'div',
            { className: classes.tab },
            _react2.default.createElement(
              'div',
              { className: classes.content },
              _react2.default.createElement(
                _Typography2.default,
                { component: 'div', type: 'body1' },
                _react2.default.createElement(
                  'span',
                  null,
                  'This interaction asks a student to draw a line that meets specific criteria. The student will draw the line by clicking on two points on the graph.'
                ),
                _react2.default.createElement(
                  'h2',
                  null,
                  'Lines'
                ),
                _react2.default.createElement(
                  'span',
                  null,
                  'Line equations must be in y=mx+b form. Only whole number coordinates can be plotted.'
                )
              ),
              _react2.default.createElement(_generalConfigBlock2.default, {
                onMultipleToggle: this.onMultipleToggle,
                onAddLine: this.onAddLine,
                multiple: model.multiple,
                config: config,
                onChange: this.onChange
              }),
              _react2.default.createElement(_chartingConfig2.default, {
                config: config,
                onChange: this.onChange,
                resetToDefaults: this.resetToDefaults
              }),
              _react2.default.createElement(_configUi.FeedbackConfig, {
                allowPartial: false,
                feedback: model.feedback,
                onChange: this.onFeedbackChange
              })
            )
          ),
          _react2.default.createElement(
            'div',
            { className: classes.tab },
            _react2.default.createElement(_scoringConfig2.default, {
              numberOfCorrectResponses: config.lines.length,
              partialScoring: model.partialScoring,
              onChange: this.onPartialScoringChange
            })
          )
        )
      );
    }
  }]);

  return Configure;
}(_react2.default.Component);

Configure.propTypes = {
  onModelChanged: _propTypes2.default.func,
  classes: _propTypes2.default.object,
  model: _propTypes2.default.object.isRequired
};


var ConfigureMain = (0, _styles.withStyles)(styles)(Configure);

var StateWrapper = function (_React$Component2) {
  _inherits(StateWrapper, _React$Component2);

  function StateWrapper(props) {
    _classCallCheck(this, StateWrapper);

    var _this2 = _possibleConstructorReturn(this, (StateWrapper.__proto__ || Object.getPrototypeOf(StateWrapper)).call(this, props));

    _this2.state = {
      model: props.model
    };

    _this2.onModelChanged = function (m) {
      _this2.setState({ model: m }, function () {
        _this2.props.onModelChanged(_this2.state.model);
      });
    };
    return _this2;
  }

  _createClass(StateWrapper, [{
    key: 'render',
    value: function render() {
      var model = this.state.model;

      return _react2.default.createElement(ConfigureMain, { model: model, onModelChanged: this.onModelChanged });
    }
  }]);

  return StateWrapper;
}(_react2.default.Component);

StateWrapper.propTypes = {
  model: _propTypes2.default.any,
  onModelChanged: _propTypes2.default.func
};
exports.default = StateWrapper;