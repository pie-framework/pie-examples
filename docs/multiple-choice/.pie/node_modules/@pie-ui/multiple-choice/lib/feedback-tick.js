'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactTransitionGroup = require('react-transition-group');

var _styles = require('@material-ui/core/styles');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const stylesheet = {
  incorrect: {
    fill: 'var(--feedback-incorrect-bg-color, orange)'
  },
  correct: {
    fill: 'var(--feedback-correct-bg-color, green)'
  },
  feedbackTick: {
    width: '33px',
    height: '33px',
    '& svg': {
      position: 'absolute',
      display: 'inline-block',
      width: '33px',
      height: '33px',
      verticalAlign: 'middle',
      '& hide': {
        display: 'none'
      }
    }
  },
  feedbackTickEnter: {
    opacity: '0',
    left: '-50px'
  },
  feedbackTickEnterActive: {
    opacity: '1',
    left: '0px',
    transition: 'left 500ms ease-in 200ms, opacity 500ms linear 200ms'
  },
  feedbackTickLeave: {
    opacity: '1',
    left: '0px'
  },
  feedbackTickLeaveActive: {
    opacity: '0',
    left: '-50px',
    transition: 'left 300ms ease-in, opacity 300ms'
  }
};

class FeedbackTick extends _react2.default.Component {
  constructor(props) {
    super(props);
    this.incorrectIcon = _react2.default.createElement(
      'svg',
      {
        key: '1',
        preserveAspectRatio: 'xMinYMin meet',
        x: '0px',
        y: '0px',
        viewBox: '0 0 44 40',
        style: { enableBackground: 'new 0 0 44 40' }
      },
      _react2.default.createElement(
        'g',
        null,
        _react2.default.createElement('rect', {
          x: '11',
          y: '17.3',
          transform: 'matrix(0.7071 -0.7071 0.7071 0.7071 -7.852 19.2507)',
          className: this.props.classes.incorrect,
          width: '16.6',
          height: '3.7'
        }),
        _react2.default.createElement('rect', {
          x: '17.4',
          y: '10.7',
          transform: 'matrix(0.7071 -0.7071 0.7071 0.7071 -7.8175 19.209)',
          className: this.props.classes.incorrect,
          width: '3.7',
          height: '16.6'
        })
      )
    );

    this.correctIcon = _react2.default.createElement(
      'svg',
      {
        key: '2',
        preserveAspectRatio: 'xMinYMin meet',
        version: '1.1',
        x: '0px',
        y: '0px',
        viewBox: '0 0 44 40',
        style: { enableBackground: 'new 0 0 44 40' }
      },
      _react2.default.createElement('polygon', {
        className: this.props.classes.correct,
        points: '19.1,28.6 11.8,22.3 14.4,19.2 17.9,22.1 23.9,11.4 27.5,13.4'
      })
    );
  }

  render() {
    var _props = this.props;
    const correctness = _props.correctness,
          classes = _props.classes;


    const icon = (() => {
      if (correctness === 'incorrect') {
        return this.incorrectIcon;
      } else if (correctness === 'correct') {
        return this.correctIcon;
      }
    })();

    return _react2.default.createElement(
      'div',
      { className: classes.feedbackTick },
      _react2.default.createElement(
        _reactTransitionGroup.TransitionGroup,
        null,
        correctness && _react2.default.createElement(
          _reactTransitionGroup.CSSTransition,
          {
            classNames: {
              enter: classes.feedbackTickEnter,
              enterActive: classes.feedbackTickEnterActive,
              exit: classes.feedbackTickLeave,
              exitActive: classes.feedbackTickLeaveActive
            },
            timeout: { enter: 700, exit: 300 }
          },
          icon
        )
      )
    );
  }
}

FeedbackTick.propTypes = {
  classes: _propTypes2.default.object.isRequired,
  correctness: _propTypes2.default.string
};
exports.default = (0, _styles.withStyles)(stylesheet, { name: 'FeedbackTick' })(FeedbackTick);