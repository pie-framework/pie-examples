'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _green = require('@material-ui/core/colors/green');

var _green2 = _interopRequireDefault(_green);

var _orange = require('@material-ui/core/colors/orange');

var _orange2 = _interopRequireDefault(_orange);

var _pink = require('@material-ui/core/colors/pink');

var _pink2 = _interopRequireDefault(_pink);

var _styles = require('@material-ui/core/styles');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _multipleChoice = require('./multiple-choice');

var _multipleChoice2 = _interopRequireDefault(_multipleChoice);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const styleSheet = theme => {
  const root = {
    '--feedback-correct-bg-color': _green2.default[500],
    '--feedback-incorrect-bg-color': _orange2.default[500],
    '--feedback-color': 'black',
    '--choice-input-color': 'black',
    '--choice-input-selected-color': theme.palette.primary[500],
    '--choice-input-disabled-color': theme.palette.grey[500],
    '--choice-input-correct-disabled-color': _green2.default[500],
    '--choice-input-incorrect-disabled-color': _orange2.default[500],
    backgroundColor: 'var(--mc-bg-color, rgba(0,0,0,0))'
  };

  return {
    root,
    'white-on-black': {
      '--correct-answer-toggle-label-color': 'white',
      '--feedback-correct-bg-color': _green2.default[800],
      '--feedback-incorrect-bg-color': _orange2.default[800],
      '--feedback-color': 'white',
      '--mc-bg-color': 'black',
      '--choice-input-color': 'white',
      '--choice-input-selected-color': theme.palette.primary[200]
    },
    'black-on-rose': {
      '--mc-bg-color': _pink2.default[50]
    }
  };
};

class Main extends _react2.default.Component {
  constructor(props) {
    super(props);
  }

  render() {
    var _props = this.props;
    const model = _props.model,
          onChoiceChanged = _props.onChoiceChanged,
          session = _props.session,
          classes = _props.classes;


    return _react2.default.createElement(
      'div',
      { className: (0, _classnames2.default)(classes.root, classes[model.className]) },
      _react2.default.createElement(_multipleChoice2.default, _extends({}, model, {
        session: session,
        onChoiceChanged: onChoiceChanged
      }))
    );
  }
}

Main.propTypes = {
  model: _propTypes2.default.object,
  session: _propTypes2.default.object,
  onChoiceChanged: _propTypes2.default.func,
  classes: _propTypes2.default.object.isRequired
};
Main.defaultProps = {
  model: {},
  session: {}
};
const Styled = (0, _styles.withStyles)(styleSheet, { name: 'Main' })(Main);

const theme = (0, _styles.createMuiTheme)();

const Root = props => _react2.default.createElement(
  _styles.MuiThemeProvider,
  { theme: theme },
  _react2.default.createElement(Styled, props)
);

exports.default = Root;