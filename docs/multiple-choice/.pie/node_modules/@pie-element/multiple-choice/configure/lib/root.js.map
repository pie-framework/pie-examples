{"version":3,"sources":["../src/root.jsx"],"names":["Root","React","Component","constructor","props","onChoiceModeChanged","value","model","state","choiceMode","correctFound","choices","map","c","correct","updateModel","onRemoveChoice","index","splice","onPartialScoringChanged","partialScoring","modelChanged","reset","onModelChanged","setState","onAddChoice","push","label","utils","firstAvailableIndex","feedback","type","onKeyModeChanged","keyMode","onChoiceChanged","choice","onPromptChanged","prompt","update","render","onDefaultLangChanged","imageSupport","propTypes","PropTypes","object","isRequired","func"],"mappings":"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","file":"root.js","sourcesContent":["import Main from './main';\nimport React from 'react';\nimport cloneDeep from 'lodash/cloneDeep';\nimport merge from 'lodash/merge';\nimport PropTypes from 'prop-types';\nimport { choiceUtils as utils } from '@pie-lib/config-ui';\n\nexport default class Root extends React.Component {\n  static propTypes = {\n    model: PropTypes.object.isRequired,\n    onModelChanged: PropTypes.func.isRequired,\n    imageSupport: PropTypes.object\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      model: props.model\n    };\n  }\n\n  onChoiceModeChanged = value => {\n    const { model } = this.state;\n\n    model.choiceMode = value;\n\n    if (value === 'radio') {\n      let correctFound = false;\n\n      model.choices = model.choices.map(c => {\n        if (correctFound) {\n          c.correct = false;\n          return c;\n        }\n\n        if (c.correct) {\n          correctFound = true;\n        }\n\n        return c;\n      });\n    }\n\n    this.updateModel(model, true);\n  };\n\n  onRemoveChoice = index => {\n    const { model } = this.state;\n    model.choices.splice(index, 1);\n    this.updateModel(model);\n  };\n\n  onPartialScoringChanged = partialScoring => {\n    const { model } = this.state;\n    model.partialScoring = partialScoring;\n    this.updateModel(model);\n  };\n\n  modelChanged = (reset) => {\n    this.props.onModelChanged(this.state.model, reset);\n  };\n\n  updateModel = (model, reset) => {\n    this.setState({ model }, () => {\n      this.modelChanged(reset);\n    });\n  };\n\n  onAddChoice = () => {\n    const { model } = this.state;\n    model.choices.push({\n      label: 'label',\n      value: utils.firstAvailableIndex(model.choices.map(c => c.value), 0),\n      feedback: {\n        type: 'none'\n      }\n    });\n    this.updateModel(model);\n  };\n\n  onKeyModeChanged = value => {\n    const { model } = this.state;\n    model.keyMode = value;\n    this.updateModel(model);\n  };\n\n  onChoiceChanged = (index, choice) => {\n    const { model } = this.state;\n    if (choice.correct && model.choiceMode === 'radio') {\n      model.choices = model.choices.map(c => {\n        return merge({}, c, { correct: false });\n      });\n    }\n\n    model.choices.splice(index, 1, choice);\n    this.updateModel(model);\n  };\n\n  onPromptChanged = prompt => {\n    const update = cloneDeep(this.state.model);\n    update.prompt = prompt;\n    this.updateModel(update);\n  };\n\n  render() {\n    const props = {\n      model: this.state.model,\n      onRemoveChoice: this.onRemoveChoice,\n      onChoiceModeChanged: this.onChoiceModeChanged,\n      onKeyModeChanged: this.onKeyModeChanged,\n      onChoiceChanged: this.onChoiceChanged,\n      onAddChoice: this.onAddChoice,\n      onPromptChanged: this.onPromptChanged,\n      onDefaultLangChanged: this.onDefaultLangChanged,\n      onPartialScoringChanged: this.onPartialScoringChanged,\n      imageSupport: this.props.imageSupport\n    };\n\n    return <Main {...props} />;\n  }\n}\n"]}