'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _radioWithLabel = require('../radio-with-label');

var _radioWithLabel2 = _interopRequireDefault(_radioWithLabel);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _styles = require('@material-ui/core/styles');

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var styles = function styles() {
  return {
    radioLabel: {
      fontSize: '12px'
    },
    choice: {
      display: 'flex',
      alignItems: 'center'
    },
    choiceHolder: {
      display: 'flex',
      alignItems: 'center'
    }
  };
};

var Group = function Group(_ref) {
  var feedbackLabels = _ref.feedbackLabels,
      value = _ref.value,
      classes = _ref.classes,
      className = _ref.className,
      _onChange = _ref.onChange,
      keys = _ref.keys;
  return _react2.default.createElement(
    'div',
    { className: (0, _classnames2.default)(classes.choiceHolder, className) },
    keys.map(function (key) {
      return _react2.default.createElement(
        'div',
        { className: classes.choice, key: key },
        _react2.default.createElement(_radioWithLabel2.default, {
          value: key,
          checked: value === key,
          classes: {
            label: classes.radioLabel
          },
          onChange: function onChange(e) {
            return _onChange(e.currentTarget.value);
          },
          label: feedbackLabels[key]
        })
      );
    })
  );
};

Group.propTypes = {
  className: _propTypes2.default.string,
  feedbackLabels: _propTypes2.default.object.isRequired,
  value: _propTypes2.default.string.isRequired,
  classes: _propTypes2.default.object.isRequired,
  keys: _propTypes2.default.arrayOf(_propTypes2.default.string),
  onChange: _propTypes2.default.func
};

exports.default = (0, _styles.withStyles)(styles)(Group);