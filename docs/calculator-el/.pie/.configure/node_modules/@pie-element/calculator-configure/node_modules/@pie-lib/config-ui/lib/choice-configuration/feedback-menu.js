'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IconMenu = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Menu = require('@material-ui/core/Menu');

var _Menu2 = _interopRequireDefault(_Menu);

var _MenuItem = require('@material-ui/core/MenuItem');

var _MenuItem2 = _interopRequireDefault(_MenuItem);

var _Feedback = require('@material-ui/icons/Feedback');

var _Feedback2 = _interopRequireDefault(_Feedback);

var _IconButton = require('@material-ui/core/IconButton');

var _IconButton2 = _interopRequireDefault(_IconButton);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var IconMenu = exports.IconMenu = function (_React$Component) {
  _inherits(IconMenu, _React$Component);

  function IconMenu(props) {
    _classCallCheck(this, IconMenu);

    var _this = _possibleConstructorReturn(this, (IconMenu.__proto__ || Object.getPrototypeOf(IconMenu)).call(this, props));

    _this.handleClick = function (event) {
      _this.setState({ open: true, anchorEl: event.currentTarget });
    };

    _this.handleRequestClose = function () {
      _this.setState({ open: false });
    };

    _this.state = {
      anchorEl: undefined,
      open: false
    };
    return _this;
  }

  _createClass(IconMenu, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          opts = _props.opts,
          onClick = _props.onClick;


      var keys = Object.keys(opts);

      var handleMenuClick = function handleMenuClick(key) {
        return function () {
          onClick(key);
          _this2.handleRequestClose();
        };
      };

      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          'div',
          { onClick: this.handleClick },
          this.props.iconButtonElement
        ),
        _react2.default.createElement(
          _Menu2.default,
          {
            id: 'simple-menu',
            anchorEl: this.state.anchorEl,
            open: this.state.open,
            onClose: this.handleRequestClose
          },
          keys.map(function (k, index) {
            return _react2.default.createElement(
              _MenuItem2.default,
              { key: index, onClick: handleMenuClick(k) },
              opts[k]
            );
          })
        )
      );
    }
  }]);

  return IconMenu;
}(_react2.default.Component);

IconMenu.propTypes = {
  opts: _propTypes2.default.object,
  onClick: _propTypes2.default.func.isRequired,
  iconButtonElement: _propTypes2.default.any
};

var FeedbackMenu = function (_React$Component2) {
  _inherits(FeedbackMenu, _React$Component2);

  function FeedbackMenu() {
    _classCallCheck(this, FeedbackMenu);

    return _possibleConstructorReturn(this, (FeedbackMenu.__proto__ || Object.getPrototypeOf(FeedbackMenu)).apply(this, arguments));
  }

  _createClass(FeedbackMenu, [{
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          value = _props2.value,
          onChange = _props2.onChange,
          classes = _props2.classes;


      var t = value && value.type;
      var iconColor = t === 'custom' ? 'secondary' : t === 'default' ? 'primary' : 'disabled';

      var tooltip = t === 'custom' ? 'Custom Feedback' : t === 'default' ? 'Default Feedback' : 'Feedback disabled';

      var icon = _react2.default.createElement(
        _IconButton2.default,
        { className: classes.icon, 'aria-label': tooltip },
        _react2.default.createElement(_Feedback2.default, { color: iconColor })
      );

      return _react2.default.createElement(IconMenu, {
        iconButtonElement: icon,
        onClick: function onClick(key) {
          return onChange(key);
        },
        opts: {
          none: 'No Feedback',
          default: 'Default',
          custom: 'Custom'
        }
      });
    }
  }]);

  return FeedbackMenu;
}(_react2.default.Component);

FeedbackMenu.propTypes = {
  value: _propTypes2.default.object,
  onChange: _propTypes2.default.func.isRequired,
  classes: _propTypes2.default.object.isRequired
};
FeedbackMenu.defaultProps = {
  classes: {}
};
exports.default = FeedbackMenu;