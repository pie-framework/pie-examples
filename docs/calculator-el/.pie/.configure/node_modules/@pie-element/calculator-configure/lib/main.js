'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Main = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _configUi = require('@pie-lib/config-ui');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Typography = require('@material-ui/core/Typography');

var _Typography2 = _interopRequireDefault(_Typography);

var _calculator = require('@pie-ui/calculator');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const MainTypes = {
  model: _propTypes2.default.object.isRequired,
  onChange: _propTypes2.default.func.isRequired
};

class Main extends _react2.default.Component {
  constructor(...args) {
    var _temp;

    return _temp = super(...args), this.onModeChange = mode => {
      const model = this.props.model;

      const update = _extends({}, model, { mode });
      this.props.onChange(update);
    }, _temp;
  }

  render() {
    const model = this.props.model;

    return _react2.default.createElement(
      'div',
      null,
      _react2.default.createElement(_configUi.TwoChoice, {
        header: 'Choose a Calculator',
        value: model.mode,
        onChange: this.onModeChange,
        one: { label: 'Basic', value: 'basic' },
        two: { label: 'Scientific', value: 'scientific' }
      }),
      _react2.default.createElement('br', null),
      _react2.default.createElement(_calculator.CalculatorLayout, { mode: model.mode, onClose: () => ({}) }),
      _react2.default.createElement('br', null),
      _react2.default.createElement('br', null),
      _react2.default.createElement(
        _Typography2.default,
        null,
        'Please note that the calculators are tools for students and do not record answers.'
      )
    );
  }
}

exports.Main = Main;
Main.propTypes = MainTypes;
class Stateful extends _react2.default.Component {

  constructor(props) {
    super(props);

    this.onChange = model => {
      this.setState({ model }, () => {
        this.props.onChange(this.state.model);
      });
    };

    this.state = {
      model: props.model
    };
  }

  componentWillReceiveProps(props) {
    this.setState({ model: props.model });
  }

  render() {
    return _react2.default.createElement(Main, { model: this.state.model, onChange: this.onChange });
  }
}
exports.default = Stateful;
Stateful.propTypes = MainTypes;