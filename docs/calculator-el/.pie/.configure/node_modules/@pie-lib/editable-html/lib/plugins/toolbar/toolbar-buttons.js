'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MarkButton = exports.RawMarkButton = exports.Button = exports.RawButton = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _debug = require('debug');

var _debug2 = _interopRequireDefault(_debug);

var _reactJss = require('react-jss');

var _reactJss2 = _interopRequireDefault(_reactJss);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = function styles() {
  return {
    button: {
      color: 'grey',
      display: 'inline-flex',
      padding: '2px',
      '& :hover': {
        color: 'black'
      }
    },
    active: {
      color: 'black'
    }
  };
};

var log = (0, _debug2.default)('pie-elements:editable-html:raw-button');

var RawButton = exports.RawButton = function (_React$Component) {
  _inherits(RawButton, _React$Component);

  function RawButton(props) {
    _classCallCheck(this, RawButton);

    var _this = _possibleConstructorReturn(this, (RawButton.__proto__ || Object.getPrototypeOf(RawButton)).call(this, props));

    _this.onClick = function (e) {
      log('[onClick]');
      e.preventDefault();
      var onClick = _this.props.onClick;

      onClick(e);
    };

    return _this;
  }

  _createClass(RawButton, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          classes = _props.classes,
          children = _props.children,
          active = _props.active;

      var names = (0, _classnames2.default)(classes.button, active && classes.active);

      return _react2.default.createElement(
        'div',
        { className: names, onMouseDown: this.onClick },
        children
      );
    }
  }]);

  return RawButton;
}(_react2.default.Component);

RawButton.propTypes = {
  onClick: _propTypes2.default.func.isRequired,
  classes: _propTypes2.default.object.isRequired,
  children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]).isRequired,
  active: _propTypes2.default.bool
};
var Button = exports.Button = (0, _reactJss2.default)(styles())(RawButton);

var RawMarkButton = exports.RawMarkButton = function (_React$Component2) {
  _inherits(RawMarkButton, _React$Component2);

  function RawMarkButton(props) {
    _classCallCheck(this, RawMarkButton);

    var _this2 = _possibleConstructorReturn(this, (RawMarkButton.__proto__ || Object.getPrototypeOf(RawMarkButton)).call(this, props));

    _this2.onToggle = function (e) {
      e.preventDefault();
      _this2.props.onToggle(_this2.props.mark);
    };

    return _this2;
  }

  _createClass(RawMarkButton, [{
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          classes = _props2.classes,
          children = _props2.children,
          active = _props2.active;

      var names = (0, _classnames2.default)(classes.button, active && classes.active);
      return _react2.default.createElement(
        'span',
        { className: names, onMouseDown: this.onToggle },
        children
      );
    }
  }]);

  return RawMarkButton;
}(_react2.default.Component);

RawMarkButton.propTypes = {
  onToggle: _propTypes2.default.func.isRequired,
  mark: _propTypes2.default.string,
  children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]).isRequired,
  classes: _propTypes2.default.object.isRequired,
  active: _propTypes2.default.bool
};
var MarkButton = exports.MarkButton = (0, _reactJss2.default)(styles())(RawMarkButton);