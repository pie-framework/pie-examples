import { TokenType, Lexer, ILexingResult } from 'chevrotain';
export { TokenType };
export declare const AdditionOperator: TokenType;
export declare const Plus: TokenType;
export declare const Minus: TokenType;
export declare const MultiplicationOperator: TokenType;
export declare const Multi: TokenType;
export declare const Div: TokenType;
export declare const AngleFunction: TokenType;
export declare const ASin: TokenType;
export declare const ACos: TokenType;
export declare const ATan: TokenType;
export declare const Sin: TokenType;
export declare const Cos: TokenType;
export declare const Tan: TokenType;
export declare const Factorial: TokenType;
export declare const Pi: TokenType;
export declare const SuperScriptNumber: TokenType;
export declare const SquareRoot: TokenType;
export declare const Percent: TokenType;
export declare const LParen: TokenType;
export declare const RParen: TokenType;
export declare const Digit: TokenType;
export declare const NumberLiteral: TokenType;
export declare const DecimalPlace: TokenType;
export declare const PowerFunc: TokenType;
export declare const LogFunc: TokenType;
export declare const LnFunc: TokenType;
export declare const Comma: TokenType;
export declare const Euler: TokenType;
export declare const Abs: TokenType;
export declare const WhiteSpace: TokenType;
export declare const allTokens: TokenType[];
export declare const CalculatorLexer: Lexer;
export declare const tokenize: (s: string) => ILexingResult;
