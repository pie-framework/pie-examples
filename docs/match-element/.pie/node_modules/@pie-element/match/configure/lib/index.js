'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _configure = require('./configure');

var _configure2 = _interopRequireDefault(_configure);

var _pieConfigureEvents = require('@pie-framework/pie-configure-events');

var _debug = require('debug');

var _debug2 = _interopRequireDefault(_debug);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const log = (0, _debug2.default)('pie-elements:match:configure');

class MatchConfigure extends HTMLElement {
  constructor() {
    super();
  }

  set model(m) {
    this._model = m;
    this._render();
  }

  onModelChanged(model) {
    this._model = model;
    log('[onModelChanged]: ', this._model);
    this.dispatchEvent(new _pieConfigureEvents.ModelUpdatedEvent(this._model, true));
  }

  /**
   *
   * @param {done, progress, file} handler
   */
  insertImage(handler) {
    this.dispatchEvent(new _pieConfigureEvents.InsertImageEvent(handler));
  }

  onDeleteImage(src, done) {
    this.dispatchEvent(new _pieConfigureEvents.DeleteImageEvent(src, done));
  }

  _render() {
    if (this._model) {
      const el = _react2.default.createElement(_configure2.default, {
        onModelChanged: this.onModelChanged.bind(this),
        model: this._model,
        imageSupport: {
          add: this.insertImage.bind(this),
          delete: this.onDeleteImage.bind(this)
        }
      });
      _reactDom2.default.render(el, this);
    }
  }
}
exports.default = MatchConfigure;