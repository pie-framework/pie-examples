'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RawMathPreview = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _debug = require('debug');

var _debug2 = _interopRequireDefault(_debug);

var _styles = require('@material-ui/core/styles');

var _theme = require('../../theme');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _static = require('./mathquill/static');

var _static2 = _interopRequireDefault(_static);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var log = (0, _debug2.default)('@pie-lib:editable-html:plugins:math:component');

var RawMathPreview = exports.RawMathPreview = function (_React$Component) {
  _inherits(RawMathPreview, _React$Component);

  function RawMathPreview() {
    _classCallCheck(this, RawMathPreview);

    return _possibleConstructorReturn(this, (RawMathPreview.__proto__ || Object.getPrototypeOf(RawMathPreview)).apply(this, arguments));
  }

  _createClass(RawMathPreview, [{
    key: 'render',
    value: function render() {
      log('[render] data: ', this.props.node.data);
      var latex = this.props.node.data.get('latex');
      var _props = this.props,
          classes = _props.classes,
          isSelected = _props.isSelected,
          onFocus = _props.onFocus,
          onBlur = _props.onBlur;

      return _react2.default.createElement(
        'div',
        { className: (0, _classnames2.default)(classes.root, isSelected && classes.selected) },
        ' ',
        _react2.default.createElement(_static2.default, { latex: latex, onFocus: onFocus, onBlur: onBlur })
      );
    }
  }]);

  return RawMathPreview;
}(_react2.default.Component);

RawMathPreview.propTypes = {
  latex: _propTypes2.default.string,
  node: _propTypes2.default.object,
  classes: _propTypes2.default.object,
  isSelected: _propTypes2.default.bool,
  onFocus: _propTypes2.default.func,
  onBlur: _propTypes2.default.func
};


var mp = function mp(theme) {
  return {
    root: {
      display: 'inline-flex',
      alignItems: 'center',
      '& > .mq-math-mode': {
        border: 'solid 1px lightgrey'
      },
      '& > .mq-focused': {
        outline: 'none',
        boxShadow: 'none',
        border: 'solid 1px ' + _theme.primary,
        borderRadius: '0px'
      }
    },
    selected: {
      border: 'solid 1px ' + theme.palette.primary.main,
      '& > .mq-math-mode': {
        border: 'solid 0px lightgrey'
      }
    }
  };
};

exports.default = (0, _styles.withStyles)(mp)(RawMathPreview);