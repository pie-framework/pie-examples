'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PartialScoringConfig = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Typography = require('@material-ui/core/Typography');

var _Typography2 = _interopRequireDefault(_Typography);

var _Checkbox = require('@material-ui/core/Checkbox');

var _Checkbox2 = _interopRequireDefault(_Checkbox);

var _styles = require('@material-ui/core/styles');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PartialScoringConfig = exports.PartialScoringConfig = function (_React$Component) {
  _inherits(PartialScoringConfig, _React$Component);

  function PartialScoringConfig(props) {
    _classCallCheck(this, PartialScoringConfig);

    var _this = _possibleConstructorReturn(this, (PartialScoringConfig.__proto__ || Object.getPrototypeOf(PartialScoringConfig)).call(this, props));

    _this.state = {
      checked: false
    };

    _this.onCheckboxChanged = function () {
      var checked = !_this.state.checked;
      var onChange = _this.props.onChange;


      _this.setState({
        checked: checked
      });
      onChange(checked);
    };

    var partialScoring = props.partialScoring;


    _this.state.checked = partialScoring;
    return _this;
  }

  _createClass(PartialScoringConfig, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          classes = _props.classes,
          label = _props.label;
      var checked = this.state.checked;


      return _react2.default.createElement(
        'div',
        { className: classes.scoringConfig },
        _react2.default.createElement(
          _Typography2.default,
          { type: 'subheading' },
          'Partial Scoring Rules'
        ),
        _react2.default.createElement('br', null),
        _react2.default.createElement(
          _Typography2.default,
          null,
          label ? label : 'Each correct response is worth 1/X where X is the number of correct answer selections.'
        ),
        _react2.default.createElement(_Checkbox2.default, {
          checked: checked,
          onChange: this.onCheckboxChanged,
          label: ''
        })
      );
    }
  }]);

  return PartialScoringConfig;
}(_react2.default.Component);

PartialScoringConfig.propTypes = {
  label: _propTypes2.default.string,
  partialScoring: _propTypes2.default.bool,
  classes: _propTypes2.default.object.isRequired,
  onChange: _propTypes2.default.func
};
exports.default = (0, _styles.withStyles)({
  scoringConfig: {
    paddingTop: '10px'
  }
})(PartialScoringConfig);