'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EditorAndToolbar = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _toolbar = require('./toolbar');

var _toolbar2 = _interopRequireDefault(_toolbar);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _debug = require('debug');

var _debug2 = _interopRequireDefault(_debug);

var _reactJss = require('react-jss');

var _reactJss2 = _interopRequireDefault(_reactJss);

var _theme = require('../../theme');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _slatePropTypes = require('slate-prop-types');

var _slatePropTypes2 = _interopRequireDefault(_slatePropTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var log = (0, _debug2.default)('editable-html:plugins:toolbar:editor-and-toolbar');

var EditorAndToolbar = exports.EditorAndToolbar = function (_React$Component) {
  _inherits(EditorAndToolbar, _React$Component);

  function EditorAndToolbar() {
    _classCallCheck(this, EditorAndToolbar);

    return _possibleConstructorReturn(this, (EditorAndToolbar.__proto__ || Object.getPrototypeOf(EditorAndToolbar)).apply(this, arguments));
  }

  _createClass(EditorAndToolbar, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          classes = _props.classes,
          children = _props.children,
          value = _props.value,
          plugins = _props.plugins,
          onChange = _props.onChange,
          onDone = _props.onDone,
          focusedNode = _props.focusedNode,
          readOnly = _props.readOnly;


      var inFocus = value.isFocused || focusedNode !== null && focusedNode !== undefined;
      var holderNames = (0, _classnames2.default)(classes.editorHolder, inFocus && classes.editorInFocus, readOnly && classes.readOnly);

      log('[render] inFocus: ', inFocus, 'value.isFocused:', value.isFocused, 'focused node: ', focusedNode);

      return _react2.default.createElement(
        'div',
        { className: classes.root },
        _react2.default.createElement(
          'div',
          { className: holderNames },
          _react2.default.createElement(
            'div',
            { className: classes.children },
            children
          )
        ),
        _react2.default.createElement(_toolbar2.default, {
          plugins: plugins,
          value: value,
          isFocused: inFocus,
          onChange: onChange,
          onDone: onDone
        })
      );
    }
  }]);

  return EditorAndToolbar;
}(_react2.default.Component);

EditorAndToolbar.propTypes = {
  children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]).isRequired,
  value: _slatePropTypes2.default.value.isRequired,
  plugins: _propTypes2.default.array.isRequired,
  onChange: _propTypes2.default.func.isRequired,
  onDone: _propTypes2.default.func.isRequired,
  focusedNode: _propTypes2.default.node,
  readOnly: _propTypes2.default.bool,
  classes: _propTypes2.default.object.isRequired
};


var style = {
  root: {
    height: '100%',
    position: 'relative',
    padding: '0px',
    border: 'none',
    borderBottom: '0px solid #cccccc',
    borderRadius: '0px',
    cursor: 'text',
    '& [data-slate-editor="true"]': {
      overflow: 'auto',
      maxHeight: '500px'
    }
  },
  children: {
    padding: '7px',
    height: '100%'
  },
  editorHolder: {
    position: 'relative',
    height: '100%',
    padding: '0px',
    '&::before': {
      left: '0',
      right: '0',
      bottom: '0',
      height: '1px',
      content: '""',
      position: 'absolute',
      transition: 'background-color 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',
      pointerEvents: 'none',
      backgroundColor: 'rgba(0, 0, 0, 0.42)'
    },
    '&::after': {
      left: '0',
      right: '0',
      bottom: '0',
      height: '1px',
      content: '""',
      position: 'absolute',
      transform: 'scaleX(0)',
      transition: 'transform 200ms cubic-bezier(0.0, 0.0, 0.2, 1) 0ms, background-color 200ms linear',
      backgroundColor: 'rgba(0, 0, 0, 0.42)'
    },
    '&:focus': {
      '&::after': {
        transform: 'scaleX(1)',
        backgroundColor: _theme.primary,
        height: '2px'
      }
    },
    '&:hover': {
      '&::after': {
        transform: 'scaleX(1)',
        backgroundColor: 'black',
        height: '2px'
      }
    }
  },

  readOnly: {
    // backgroundColor: 'rgba(0,0,0,0.05)',
    '&::before': {
      background: 'transparent',
      backgroundSize: '5px 1px',
      backgroundImage: 'linear-gradient(to right, rgba(0, 0, 0, 0.42) 33%, transparent 0%)',
      backgroundRepeat: 'repeat-x',
      backgroundPosition: 'left top'
    },
    '&::after': {
      left: '0',
      right: '0',
      bottom: '0',
      height: '1px',
      content: '""',
      position: 'absolute',
      transform: 'scaleX(0)',
      transition: 'transform 200ms cubic-bezier(0.0, 0.0, 0.2, 1) 0ms, background-color 0ms linear',
      backgroundColor: 'rgba(0, 0, 0, 0)'
    },
    '&:hover': {
      '&::after': {
        transform: 'scaleX(0)',
        backgroundColor: 'black',
        height: '2px'
      }
    }
  },
  editorInFocus: {
    '&::after': {
      transform: 'scaleX(1)',
      backgroundColor: _theme.primary,
      height: '2px'
    },
    '&:hover': {
      '&::after': {
        backgroundColor: _theme.primary
      }
    }
  }
};

exports.default = (0, _reactJss2.default)(style)(EditorAndToolbar);