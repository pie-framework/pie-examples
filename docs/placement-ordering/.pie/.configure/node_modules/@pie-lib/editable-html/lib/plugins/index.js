'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.buildPlugins = exports.DEFAULT_PLUGINS = undefined;

var _FormatBold = require('@material-ui/icons/FormatBold');

var _FormatBold2 = _interopRequireDefault(_FormatBold);

var _Code = require('@material-ui/icons/Code');

var _Code2 = _interopRequireDefault(_Code);

var _FormatListBulleted = require('@material-ui/icons/FormatListBulleted');

var _FormatListBulleted2 = _interopRequireDefault(_FormatListBulleted);

var _FormatListNumbered = require('@material-ui/icons/FormatListNumbered');

var _FormatListNumbered2 = _interopRequireDefault(_FormatListNumbered);

var _image = require('./image');

var _image2 = _interopRequireDefault(_image);

var _FormatItalic = require('@material-ui/icons/FormatItalic');

var _FormatItalic2 = _interopRequireDefault(_FormatItalic);

var _math = require('./math');

var _math2 = _interopRequireDefault(_math);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _FormatStrikethrough = require('@material-ui/icons/FormatStrikethrough');

var _FormatStrikethrough2 = _interopRequireDefault(_FormatStrikethrough);

var _toolbar = require('./toolbar');

var _toolbar2 = _interopRequireDefault(_toolbar);

var _FormatUnderlined = require('@material-ui/icons/FormatUnderlined');

var _FormatUnderlined2 = _interopRequireDefault(_FormatUnderlined);

var _compact = require('lodash/compact');

var _compact2 = _interopRequireDefault(_compact);

var _slateSoftBreak = require('slate-soft-break');

var _slateSoftBreak2 = _interopRequireDefault(_slateSoftBreak);

var _debug = require('debug');

var _debug2 = _interopRequireDefault(_debug);

var _list = require('./list');

var _list2 = _interopRequireDefault(_list);

var _table = require('./table');

var _table2 = _interopRequireDefault(_table);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var log = (0, _debug2.default)('@pie-lib:editable-html:plugins');

function MarkHotkey(options) {
  var type = options.type,
      key = options.key,
      icon = options.icon,
      tag = options.tag;

  // Return our "plugin" object, containing the `onKeyDown` handler.

  return {
    toolbar: {
      isMark: true,
      type: type,
      icon: icon,
      onToggle: function onToggle(change) {
        log('[onToggleMark] type: ', type);
        return change.toggleMark(type);
      }
    },
    renderMark: function renderMark(props) {
      if (props.mark.type === type) {
        var K = tag || type;
        return _react2.default.createElement(
          K,
          null,
          props.children
        );
      }
    },
    onKeyDown: function onKeyDown(event, change) {
      // Check that the key pressed matches our `key` option.
      if (!event.metaKey || event.key != key) return;

      // Prevent the default characters from being inserted.
      event.preventDefault();

      // Toggle the mark `type`.
      change.toggleMark(type);
      return true;
    }
  };
}

var DEFAULT_PLUGINS = exports.DEFAULT_PLUGINS = ['bold', 'code', 'italic', 'underline', 'strikethrough', 'bulleted-list', 'numbered-list', 'image', 'math', 'table'];

var buildPlugins = exports.buildPlugins = function buildPlugins(activePlugins, opts) {
  log('[buildPlugins] opts: ', opts);

  activePlugins = activePlugins || DEFAULT_PLUGINS;

  var addIf = function addIf(key, p) {
    return activePlugins.includes(key) && p;
  };
  var imagePlugin = opts.image && opts.image.onDelete && (0, _image2.default)(opts.image);
  var mathPlugin = (0, _math2.default)(opts.math);

  return (0, _compact2.default)([addIf('table', (0, _table2.default)(opts.table, (0, _compact2.default)([imagePlugin, mathPlugin]))), addIf('bold', MarkHotkey({ key: 'b', type: 'bold', icon: _react2.default.createElement(_FormatBold2.default, null), tag: 'strong' })), addIf('code', MarkHotkey({ key: '`', type: 'code', icon: _react2.default.createElement(_Code2.default, null) })), addIf('italic', MarkHotkey({ key: 'i', type: 'italic', icon: _react2.default.createElement(_FormatItalic2.default, null), tag: 'em' })), addIf('strikethrough', MarkHotkey({
    key: '~',
    type: 'strikethrough',
    icon: _react2.default.createElement(_FormatStrikethrough2.default, null),
    tag: 'del'
  })), addIf('underline', MarkHotkey({ key: 'u', type: 'underline', icon: _react2.default.createElement(_FormatUnderlined2.default, null), tag: 'u' })), addIf('image', imagePlugin), addIf('math', mathPlugin), addIf('bulleted-list', (0, _list2.default)({ key: 'l', type: 'ul_list', icon: _react2.default.createElement(_FormatListBulleted2.default, null) })), addIf('numbered-list', (0, _list2.default)({ key: 'n', type: 'ol_list', icon: _react2.default.createElement(_FormatListNumbered2.default, null) })), (0, _toolbar2.default)(opts.toolbar), (0, _slateSoftBreak2.default)()]);
};