'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Button = require('@material-ui/core/Button');

var _Button2 = _interopRequireDefault(_Button);

var _styles = require('@material-ui/core/styles');

var _Restore = require('@material-ui/icons/Restore');

var _Restore2 = _interopRequireDefault(_Restore);

var _Undo = require('@material-ui/icons/Undo');

var _Undo2 = _interopRequireDefault(_Undo);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = function styles(theme) {
  return {
    wrapper: {
      display: 'flex',
      flexDirection: 'column'
    },
    resetUndoContainer: {
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center'
    },
    icon: {
      width: '24px',
      height: '24px',
      color: 'gray',
      marginRight: theme.spacing.unit
    },
    buttonContainer: {
      display: 'flex',
      alignItems: 'center',
      marginLeft: theme.spacing.unit * 3,
      marginRight: theme.spacing.unit * 3
    }
  };
};

/**
 * HOC that adds undo and reset functionality for session values
 */
var withUndoReset = function withUndoReset(WrappedComponent) {
  var WithUndoReset = function (_React$Component) {
    _inherits(WithUndoReset, _React$Component);

    function WithUndoReset(props) {
      _classCallCheck(this, WithUndoReset);

      var _this = _possibleConstructorReturn(this, (WithUndoReset.__proto__ || Object.getPrototypeOf(WithUndoReset)).call(this, props));

      _this.onSessionChange = function (session) {
        _this.setState(function (state) {
          return {
            session: session,
            changes: [].concat(_toConsumableArray(state.changes), [session])
          };
        }, function () {
          return _this.props.onSessionChange(session);
        });
      };

      _this.onUndo = function () {
        _this.setState(function (state) {
          var newChanges = [].concat(_toConsumableArray(state.changes));

          newChanges.pop();

          return {
            changes: newChanges,
            session: newChanges.length ? newChanges[newChanges.length - 1] : state.sessionInitialValues
          };
        }, function () {
          return _this.props.onSessionChange(_this.state.session);
        });
      };

      _this.onReset = function () {
        _this.setState(function (state) {
          return {
            session: state.sessionInitialValues,
            changes: []
          };
        }, function () {
          return _this.props.onSessionChange(_this.state.sessionInitialValues);
        });
      };

      _this.state = {
        sessionInitialValues: JSON.parse(JSON.stringify(props.session)),
        session: props.session,
        changes: []
      };
      return _this;
    }

    _createClass(WithUndoReset, [{
      key: 'render',
      value: function render() {
        var _props = this.props,
            classes = _props.classes,
            rest = _objectWithoutProperties(_props, ['classes']);

        var _state = this.state,
            changes = _state.changes,
            session = _state.session;


        return React.createElement(
          'div',
          { className: classes.wrapper },
          React.createElement(
            'div',
            { className: classes.resetUndoContainer },
            React.createElement(
              _Button2.default,
              {
                className: classes.buttonContainer,
                color: 'primary',
                disabled: changes.length === 0,
                onClick: this.onUndo
              },
              React.createElement(_Undo2.default, { className: classes.icon }),
              ' Undo'
            ),
            React.createElement(
              _Button2.default,
              {
                className: classes.buttonContainer,
                color: 'primary',
                disabled: changes.length === 0,
                onClick: this.onReset
              },
              React.createElement(_Restore2.default, { className: classes.icon }),
              ' Start Over'
            )
          ),
          React.createElement(WrappedComponent, _extends({}, rest, { session: session, onSessionChange: this.onSessionChange }))
        );
      }
    }]);

    return WithUndoReset;
  }(React.Component);

  WithUndoReset.propTypes = {
    classes: _propTypes2.default.object,
    session: _propTypes2.default.object,
    onSessionChange: _propTypes2.default.func
  };


  return (0, _styles.withStyles)(styles)(WithUndoReset);
};

exports.default = withUndoReset;