'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.swap = exports.withDragContext = undefined;

var _main = require('./main');

var _main2 = _interopRequireDefault(_main);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _compact = require('lodash/compact');

var _compact2 = _interopRequireDefault(_compact);

var _debug = require('debug');

var _debug2 = _interopRequireDefault(_debug);

var _mathRendering = require('@pie-lib/math-rendering');

var _ordering = require('./ordering');

var _drag = require('@pie-lib/drag');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const log = (0, _debug2.default)('pie-elements:placement-ordering');

exports.withDragContext = _drag.withDragContext;
exports.swap = _ordering.swap;
class Ordering extends HTMLElement {
  constructor() {
    super();
    this.sessionChange = this.sessionChange.bind(this);
  }

  render() {
    if (this._model && this._session) {
      log('[render] session: ', this._session);
      log('[render] model: ', this._model);

      const element = _react2.default.createElement(_main2.default, {
        model: this._model,
        session: this._session,
        onSessionChange: this.sessionChange
      });

      _reactDom2.default.render(element, this, () => {
        (0, _mathRendering.renderMath)(this);
      });
    }
  }

  sessionChange(session) {
    this._session.value = session.value;
    this.render();
    this.dispatchEvent(new CustomEvent('session-changed', {
      bubbles: true,
      detail: {
        component: this.tagName.toLowerCase(),
        complete: this._session && this._session.value && (0, _compact2.default)(this._session.value).length === this._model.completeLength
      }
    }));
  }

  set model(newModel) {
    this._model = newModel;
    this.render();
    this.dispatchEvent(new CustomEvent('model-set', {
      bubbles: true,
      detail: {
        complete: false
      }
    }));
  }

  set session(newSession) {
    this._session = newSession;
    this.render();
  }
}
exports.default = Ordering;