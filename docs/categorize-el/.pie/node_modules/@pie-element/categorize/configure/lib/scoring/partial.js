'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Partial = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _styles = require('@material-ui/core/styles');

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _panel = require('./panel');

var _panel2 = _interopRequireDefault(_panel);

var _partialForCategory = require('./partial-for-category');

var _partialForCategory2 = _interopRequireDefault(_partialForCategory);

var _grid = require('./grid');

var _grid2 = _interopRequireDefault(_grid);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class Partial extends _react2.default.Component {
  constructor(...args) {
    var _temp;

    return _temp = super(...args), this.toggleEnabled = () => {
      var _props = this.props;
      const partial = _props.partial,
            onChange = _props.onChange;

      partial.enabled = !partial.enabled;
      onChange(partial);
    }, this.changeInnerPartial = p => {
      var _props2 = this.props;
      const partial = _props2.partial,
            onChange = _props2.onChange;

      const index = partial.rules.find(r => r.category === p.category);
      if (index !== -1) {
        partial.rules.splice(index, 1, p);
        onChange(partial);
      }
    }, _temp;
  }

  render() {
    var _props3 = this.props;
    const classes = _props3.classes,
          className = _props3.className,
          partial = _props3.partial,
          categories = _props3.categories,
          correctResponse = _props3.correctResponse;


    return _react2.default.createElement(
      'div',
      { className: (0, _classnames2.default)(classes.partial, className) },
      _react2.default.createElement(
        _panel2.default,
        {
          title: 'Partial Scoring',
          enabled: partial.enabled,
          onToggleEnabled: this.toggleEnabled
        },
        _react2.default.createElement(
          _grid2.default,
          { headings: ['Category', 'Scoring'], size: '40% 1fr' },
          categories.map((c, index) => {
            const categoryPartial = partial.rules.find(r => r.category === c.id) || { category: c.id, rules: [] };

            return categoryPartial ? _react2.default.createElement(
              _react2.default.Fragment,
              { key: index },
              _react2.default.createElement(_grid.Cell, { html: c.label }),
              _react2.default.createElement(
                _grid.Cell,
                null,
                _react2.default.createElement(_partialForCategory2.default, {
                  key: index,
                  category: c,
                  correctResponse: correctResponse.find(r => r.category === c.id),
                  onChange: this.changeInnerPartial,
                  partial: categoryPartial
                })
              )
            ) : null;
          })
        )
      )
    );
  }
}
exports.Partial = Partial;
Partial.propTypes = {
  classes: _propTypes2.default.object.isRequired,
  className: _propTypes2.default.string,
  partial: _propTypes2.default.object.isRequired,
  onChange: _propTypes2.default.func.isRequired,
  categories: _propTypes2.default.array,
  correctResponse: _propTypes2.default.array
};
Partial.defaultProps = {};
const styles = theme => ({
  partial: {}
});
exports.default = (0, _styles.withStyles)(styles)(Partial);