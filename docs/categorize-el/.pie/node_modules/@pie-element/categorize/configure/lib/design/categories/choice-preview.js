'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ChoicePreview = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _styles = require('@material-ui/core/styles');

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _drag = require('@pie-lib/drag');

var _IconButton = require('@material-ui/core/IconButton');

var _IconButton2 = _interopRequireDefault(_IconButton);

var _Delete = require('@material-ui/icons/Delete');

var _Delete2 = _interopRequireDefault(_Delete);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class ChoicePreview extends _react2.default.Component {
  constructor(...args) {
    var _temp;

    return _temp = super(...args), this.delete = () => {
      var _props = this.props;
      const onDelete = _props.onDelete,
            choice = _props.choice;

      onDelete(choice);
    }, _temp;
  }

  render() {
    var _props2 = this.props;
    const classes = _props2.classes,
          className = _props2.className,
          choice = _props2.choice;

    return _react2.default.createElement(
      'div',
      { className: (0, _classnames2.default)(classes.choicePreview, className) },
      _react2.default.createElement(
        _drag.Choice,
        null,
        _react2.default.createElement('div', { dangerouslySetInnerHTML: { __html: choice.content } }),
        _react2.default.createElement(
          _IconButton2.default,
          {
            color: 'secondary',
            'aria-label': 'delete',
            className: classes.delete,
            onClick: this.delete
          },
          _react2.default.createElement(_Delete2.default, null)
        )
      )
    );
  }
}
exports.ChoicePreview = ChoicePreview;
ChoicePreview.propTypes = {
  classes: _propTypes2.default.object.isRequired,
  className: _propTypes2.default.string,
  choice: _propTypes2.default.object.isRequired,
  onDelete: _propTypes2.default.func.isRequired
};
ChoicePreview.defaultProps = {};
const styles = theme => ({
  choicePreview: {
    position: 'relative'
  },
  delete: {
    position: 'absolute',
    right: 0,
    top: 0
  }
});
exports.default = (0, _styles.withStyles)(styles)(ChoicePreview);