'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Category = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _styles = require('@material-ui/core/styles');

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _Card = require('@material-ui/core/Card');

var _Card2 = _interopRequireDefault(_Card);

var _inputHeader = require('../input-header');

var _inputHeader2 = _interopRequireDefault(_inputHeader);

var _CardActions = require('@material-ui/core/CardActions');

var _CardActions2 = _interopRequireDefault(_CardActions);

var _buttons = require('../buttons');

var _droppablePlaceholder = require('./droppable-placeholder');

var _droppablePlaceholder2 = _interopRequireDefault(_droppablePlaceholder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class Category extends _react2.default.Component {
  constructor(...args) {
    var _temp;

    return _temp = super(...args), this.changeLabel = l => {
      var _props = this.props;
      const category = _props.category,
            onChange = _props.onChange;

      category.label = l;
      onChange(category);
    }, _temp;
  }

  render() {
    var _props2 = this.props;
    const category = _props2.category,
          classes = _props2.classes,
          className = _props2.className,
          onDelete = _props2.onDelete,
          onDeleteChoice = _props2.onDeleteChoice,
          onAddChoice = _props2.onAddChoice,
          imageSupport = _props2.imageSupport;


    return _react2.default.createElement(
      _Card2.default,
      { className: (0, _classnames2.default)(classes.category, className) },
      _react2.default.createElement(_inputHeader2.default, {
        label: category.label,
        onChange: this.changeLabel,
        onDelete: onDelete,
        imageSupport: imageSupport
      }),
      _react2.default.createElement(_droppablePlaceholder2.default, {
        className: classes.placeHolder,
        choices: category.choices,
        onDeleteChoice: onDeleteChoice,
        onDropChoice: onAddChoice,
        categoryId: category.id
      }),
      _react2.default.createElement(
        _CardActions2.default,
        { className: classes.actions },
        _react2.default.createElement(_buttons.DeleteButton, { label: 'delete', onClick: onDelete })
      )
    );
  }
}
exports.Category = Category;
Category.propTypes = {
  classes: _propTypes2.default.object.isRequired,
  className: _propTypes2.default.string,
  category: _propTypes2.default.object.isRequired,
  onChange: _propTypes2.default.func.isRequired,
  onDelete: _propTypes2.default.func.isRequired,
  onDeleteChoice: _propTypes2.default.func,
  onAddChoice: _propTypes2.default.func,
  imageSupport: _propTypes2.default.shape({
    add: _propTypes2.default.func.isRequired,
    delete: _propTypes2.default.func.isRequired
  })
};
Category.defaultProps = {};
const styles = theme => ({
  placeHolder: {
    minHeight: '100px'
  },
  deleteButton: {
    margin: 0
  },
  actions: {
    padding: 0,
    paddingBottom: 0,
    paddingTop: theme.spacing.unit
  },
  iconButtonRoot: {
    width: 'auto',
    height: 'auto'
  },
  header: {
    display: 'flex',
    justifyContent: 'space-between'
  },
  category: {
    padding: theme.spacing.unit,
    overflow: 'visible'
  },
  editor: {
    flex: '1',
    paddingBottom: theme.spacing.unit * 2
  }
});
exports.default = (0, _styles.withStyles)(styles)(Category);