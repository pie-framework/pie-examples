'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.outcome = exports.model = undefined;

var _categorize = require('@pie-lib/categorize');

var _debug = require('debug');

var _debug2 = _interopRequireDefault(_debug);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const log = (0, _debug2.default)('@pie-element:categorize:controller');

const model = exports.model = (question, session, env) => new Promise(resolve => {
  const out = {
    choices: question.choices,
    categories: question.categories,
    disabled: env.mode !== 'gather',
    config: question.config || {
      choices: {
        columns: 2
      },
      categories: {
        columns: 2
      }
    }
  };

  out.correctResponse = env.mode === 'evaluate' ? question.correctResponse : undefined;

  resolve(out);
});

const outcome = exports.outcome = (question, session, env) => {
  if (env.mode !== 'evaluate') {
    return Promise.reject(new Error('Can not call outcome when mode is not evaluate'));
  } else {
    const state = (0, _categorize.buildState)(question.categories, question.choices, session.answers, question.correctResponse);
    log('state: ', state);
    return (0, _categorize.score)(state.categories, question.scoring);
  }
};