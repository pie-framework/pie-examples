'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Choices = exports.ChoiceType = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _styles = require('@material-ui/core/styles');

var _choice = require('./choice');

var _choice2 = _interopRequireDefault(_choice);

var _gridContent = require('./grid-content');

var _gridContent2 = _interopRequireDefault(_gridContent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.ChoiceType = _choice.ChoiceType;


const Blank = () => _react2.default.createElement('div', null);

class Choices extends _react2.default.Component {

  render() {
    var _props = this.props;
    const classes = _props.classes,
          choices = _props.choices,
          config = _props.config,
          disabled = _props.disabled,
          choicePosition = _props.choicePosition;

    let style = {
      textAlign: 'center'
    };

    if (choicePosition === 'left') {
      style.direction = 'rtl';
    }

    return _react2.default.createElement(
      'div',
      { className: classes.wrapper },
      config.label && config.label !== '' && _react2.default.createElement(
        'div',
        { className: classes.labelHolder },
        config.label
      ),
      _react2.default.createElement(
        _gridContent2.default,
        {
          columns: config.columns,
          className: classes.choices,
          extraStyle: style
        },
        choices.map((c, index) => {
          return c.empty ? _react2.default.createElement(Blank, { key: index }) : _react2.default.createElement(_choice2.default, _extends({
            disabled: disabled,
            className: classes.choice,
            key: index
          }, c));
        })
      )
    );
  }
}

exports.Choices = Choices;
Choices.propTypes = {
  classes: _propTypes2.default.object.isRequired,
  choices: _propTypes2.default.arrayOf(_propTypes2.default.oneOfType([_propTypes2.default.shape(_choice.ChoiceType), _propTypes2.default.shape({ empty: _propTypes2.default.bool })])),
  config: _propTypes2.default.shape({
    columns: _propTypes2.default.number.isRequired
  }),
  disabled: _propTypes2.default.bool,
  choicePosition: _propTypes2.default.string
};
Choices.defaultProps = {
  config: {
    columns: 4
  }
};
const styles = theme => ({
  wrapper: {
    flex: 1,
    padding: theme.spacing.unit
  },
  choices: {
    paddingTop: theme.spacing.unit,
    paddingBottom: theme.spacing.unit
  },
  labelHolder: {
    margin: '0 auto',
    textAlign: 'center',
    paddingTop: theme.spacing.unit
  }
});

exports.default = (0, _styles.withStyles)(styles)(Choices);