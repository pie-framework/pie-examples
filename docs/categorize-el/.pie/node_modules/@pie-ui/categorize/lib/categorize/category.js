'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Category = exports.CategoryType = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Typography = require('@material-ui/core/Typography');

var _Typography2 = _interopRequireDefault(_Typography);

var _styles = require('@material-ui/core/styles');

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _choice = require('./choice');

var _choice2 = _interopRequireDefault(_choice);

var _droppablePlaceholder = require('./droppable-placeholder');

var _droppablePlaceholder2 = _interopRequireDefault(_droppablePlaceholder);

var _orange = require('@material-ui/core/colors/orange');

var _orange2 = _interopRequireDefault(_orange);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const CategoryType = exports.CategoryType = {
  id: _propTypes2.default.string.isRequired,
  label: _propTypes2.default.string.isRequired,
  categoryId: _propTypes2.default.string
};

class Category extends _react2.default.Component {

  render() {
    var _props = this.props;
    const label = _props.label,
          classes = _props.classes,
          className = _props.className,
          choices = _props.choices,
          disabled = _props.disabled,
          onDropChoice = _props.onDropChoice,
          onRemoveChoice = _props.onRemoveChoice,
          grid = _props.grid,
          id = _props.id,
          correct = _props.correct;


    const names = (0, _classnames2.default)(classes.category, className);

    const placeholderNames = (0, _classnames2.default)(classes.placeholder, correct === false && classes.incorrect);

    return _react2.default.createElement(
      'div',
      { className: names },
      _react2.default.createElement(
        _Typography2.default,
        { className: classes.label },
        _react2.default.createElement('span', { dangerouslySetInnerHTML: { __html: label } })
      ),
      _react2.default.createElement(
        _droppablePlaceholder2.default,
        {
          grid: grid,
          onDropChoice: onDropChoice,
          disabled: disabled,
          className: placeholderNames
        },
        choices.map((c, index) => _react2.default.createElement(_choice2.default, _extends({
          onRemoveChoice: onRemoveChoice,
          disabled: disabled,
          key: index,
          choiceIndex: index,
          categoryId: id
        }, c)))
      )
    );
  }
}
exports.Category = Category;
Category.propTypes = _extends({}, CategoryType, {
  className: _propTypes2.default.string,
  disabled: _propTypes2.default.bool,
  classes: _propTypes2.default.object.isRequired,
  onDropChoice: _propTypes2.default.func,
  onRemoveChoice: _propTypes2.default.func
});
Category.defaultProps = {};
const styles = theme => ({
  incorrect: {
    border: `solid 1px ${_orange2.default[500]}`
  },
  label: {
    textAlign: 'center',
    paddingBottom: theme.spacing.unit
  },
  placeholder: {
    minHeight: '100px',
    flex: '1',
    display: 'grid'
  },
  category: {
    display: 'flex',
    flexDirection: 'column'
  }
});
exports.default = (0, _styles.withStyles)(styles)(Category);