'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Main = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _charting = require('@pie-lib/charting');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _controls = require('./controls');

var _controls2 = _interopRequireDefault(_controls);

var _debug = require('debug');

var _debug2 = _interopRequireDefault(_debug);

var _correctAnswerToggle = require('@pie-lib/correct-answer-toggle');

var _correctAnswerToggle2 = _interopRequireDefault(_correctAnswerToggle);

var _renderUi = require('@pie-lib/render-ui');

var _styles = require('@material-ui/core/styles');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var log = (0, _debug2.default)('pie-ui:point-intercept:main');

var Main = exports.Main = function (_React$Component) {
  _inherits(Main, _React$Component);

  function Main(props) {
    _classCallCheck(this, Main);

    var _this = _possibleConstructorReturn(this, (Main.__proto__ || Object.getPrototypeOf(Main)).call(this, props));

    _initialiseProps.call(_this);

    var points = props.session.points || [];

    _this.state = {
      session: _extends({}, props.session, { points: points }),
      selection: [],
      showCorrect: false
    };
    return _this;
  }

  _createClass(Main, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var points = nextProps.session.points || [];
      var session = _extends({}, nextProps.session, { points: points });

      this.setState({ session: session });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          model = _props.model,
          classes = _props.classes;
      var _state = this.state,
          selection = _state.selection,
          showCorrect = _state.showCorrect;

      var points = this.buildPoints();

      return _react2.default.createElement(
        'div',
        { style: { width: model.width + 'px' } },
        _react2.default.createElement(
          'div',
          { className: classes.main },
          model.correctness && _react2.default.createElement(
            'div',
            null,
            'Score: ',
            model.correctness.score
          ),
          _react2.default.createElement(_correctAnswerToggle2.default, {
            className: classes.toggle,
            show: model.correctness && model.correctness.correctness !== 'correct',
            toggled: showCorrect,
            onToggle: this.toggleShowCorrect
          }),
          !model.disabled && _react2.default.createElement(_controls2.default, {
            disabled: !(selection && selection.length > 0),
            onDeleteClick: this.deleteSelection
          }),
          _react2.default.createElement(_charting.PlotPoints, {
            title: model.title,
            width: model.width,
            height: model.height,
            domain: model.domain,
            range: model.range,
            disabled: model.disabled,
            showPointCoordinates: model.showCoordinates,
            showPointLabels: model.showPointLabels,
            showAxisLabels: model.showAxisLabels,
            maxNoOfPoints: model.maxPoints,
            onAddPoint: this.addPoint,
            onSelectionChange: this.selectionChange,
            onMovePoint: this.movePoint,
            points: points,
            selection: selection
          })
        ),
        model.feedback && _react2.default.createElement(_renderUi.Feedback, {
          correctness: model.correctness.correctness,
          feedback: model.feedback,
          width: model.width - 20 })
      );
    }
  }]);

  return Main;
}(_react2.default.Component);

Main.propTypes = {
  classes: _propTypes2.default.object,
  session: _propTypes2.default.shape({
    points: _propTypes2.default.arrayOf(_propTypes2.default.shape({
      x: _propTypes2.default.number.isRequired,
      y: _propTypes2.default.number.isRequired
    }))
  }),
  onSessionChange: _propTypes2.default.func,
  model: _propTypes2.default.object.isRequired
};

var _initialiseProps = function _initialiseProps() {
  var _this2 = this;

  this.addPoint = function (p) {
    var pointLabels = _this2.props.model.pointLabels;

    var points = _charting.pointUtils.addPoint(_this2.state.session.points, p, pointLabels);
    var session = _extends({}, _this2.state.session, { points: points });

    log('[addPoint] points: ', session.points);

    _this2.setState({ session: session }, _this2.callOnSessionChange);
  };

  this.selectionChange = function (selection) {
    log('[selectionChange]: ', selection);
    _this2.setState({ selection: selection });
  };

  this.callOnSessionChange = function () {
    var onSessionChange = _this2.props.onSessionChange;


    if (onSessionChange) {
      onSessionChange(_this2.state.session);
    }
  };

  this.deleteSelection = function () {
    var points = _charting.pointUtils.removePoints(_this2.state.session.points, _this2.state.selection);

    var session = _extends({}, _this2.state.session, { points: points });
    _this2.setState({ session: session, selection: [] }, _this2.callOnSessionChange);
  };

  this.movePoint = function (from, to) {
    var points = _charting.pointUtils.swapPoint(_this2.state.session.points, from, to);
    var session = _extends({}, _this2.state.session, { points: points });
    var selection = _charting.pointUtils.swapPoint(_this2.state.selection, from, to);
    _this2.setState({ session: session, selection: selection }, _this2.callOnSessionChange);
  };

  this.buildPoints = function () {
    var model = _this2.props.model;
    var _state2 = _this2.state,
        session = _state2.session,
        showCorrect = _state2.showCorrect;


    if (model.correctResponse) {
      if (showCorrect) {
        return model.correctResponse.map(function (p) {
          return _extends({}, p, { correct: true });
        });
      } else {
        return session.points.map(function (p) {
          return _extends({}, p, {
            correct: _charting.pointUtils.hasPoint(model.correctResponse, p, model.pointsMustMatchLabels)
          });
        });
      }
    } else {
      return session.points;
    }
  };

  this.toggleShowCorrect = function (show) {
    _this2.setState({ showCorrect: show });
  };
};

var styles = function styles(theme) {
  return {
    toggle: {
      paddingBottom: theme.spacing.unit * 3
    }
  };
};

exports.default = (0, _styles.withStyles)(styles)(Main);