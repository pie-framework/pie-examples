'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Component = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _LinearProgress = require('@material-ui/core/LinearProgress');

var _LinearProgress2 = _interopRequireDefault(_LinearProgress);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _debug = require('debug');

var _debug2 = _interopRequireDefault(_debug);

var _styles = require('@material-ui/core/styles');

var _slatePropTypes = require('slate-prop-types');

var _slatePropTypes2 = _interopRequireDefault(_slatePropTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var log = (0, _debug2.default)('@pie-lib:editable-html:plugins:image:component');

var size = function size(s) {
  return s ? s + 'px' : 'auto';
};

var Component = exports.Component = function (_React$Component) {
  _inherits(Component, _React$Component);

  function Component() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Component);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Component.__proto__ || Object.getPrototypeOf(Component)).call.apply(_ref, [this].concat(args))), _this), _this.getWidth = function (percent) {
      var multiplier = percent / 100;
      return _this.img.naturalWidth * multiplier;
    }, _this.getHeight = function (percent) {
      var multiplier = percent / 100;
      return _this.img.naturalHeight * multiplier;
    }, _this.getPercentFromWidth = function (width) {
      var floored = width / _this.img.naturalWidth * 4;
      return parseInt(floored.toFixed(0) * 25, 10);
    }, _this.applySizeData = function () {
      var _this$props = _this.props,
          node = _this$props.node,
          editor = _this$props.editor;


      var resizePercent = node.data.get('resizePercent');
      log('[applySizeData]: resizePercent: ', resizePercent);

      var update = node.data;

      if (resizePercent) {
        update = update.set('width', _this.getWidth(resizePercent));
        update = update.set('height', _this.getHeight(resizePercent));
      } else {
        var w = update.get('width');
        if (w) {
          update = update.set('resizePercent', _this.getPercentFromWidth(w));
        }
      }

      log('[applySizeData] update: ', update);

      if (!update.equals(node.data)) {
        editor.change(function (c) {
          return c.setNodeByKey(node.key, { data: update });
        });
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Component, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.applySizeData();
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      this.applySizeData();
    }
  }, {
    key: 'getSize',
    value: function getSize(data) {
      return {
        width: size(data.get('width')),
        height: size(data.get('height'))
      };
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          node = _props.node,
          editor = _props.editor,
          classes = _props.classes,
          attributes = _props.attributes,
          onFocus = _props.onFocus;

      var active = editor.value.isFocused && editor.value.selection.hasEdgeIn(node);
      var src = node.data.get('src');
      var percent = node.data.get('percent');
      var loaded = node.data.get('loaded') !== false;
      var deleteStatus = node.data.get('deleteStatus');

      log('[render] node.data:', node.data);

      var size = this.getSize(node.data);

      log('[render] style:', size);

      var className = (0, _classnames2.default)(classes.root, active && classes.active, !loaded && classes.loading, deleteStatus === 'pending' && classes.pendingDelete);

      var progressClasses = (0, _classnames2.default)(classes.progress, loaded && classes.hideProgress);

      return _react2.default.createElement(
        'div',
        { onFocus: onFocus, className: className },
        _react2.default.createElement(_LinearProgress2.default, {
          mode: 'determinate',
          value: percent > 0 ? percent : 0,
          className: progressClasses
        }),
        _react2.default.createElement('img', _extends({ src: src }, attributes, { ref: function ref(r) {
            return _this2.img = r;
          }, style: size }))
      );
    }
  }]);

  return Component;
}(_react2.default.Component);

Component.propTypes = {
  node: _slatePropTypes2.default.node.isRequired,
  editor: _propTypes2.default.shape({
    change: _propTypes2.default.func.isRequired
  }).isRequired,
  classes: _propTypes2.default.object.isRequired,
  attributes: _propTypes2.default.object,
  onFocus: _propTypes2.default.func,
  onBlur: _propTypes2.default.func
};


var styles = function styles(theme) {
  return {
    portal: {
      position: 'absolute',
      opacity: 0,
      transition: 'opacity 200ms linear'
    },
    floatingButtonRow: {
      backgroundColor: 'white',
      borderRadius: '1px',
      display: 'flex',
      padding: '10px',
      border: 'solid 1px #eeeeee',
      boxShadow: '0px 1px 5px 0px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 3px 1px -2px rgba(0, 0, 0, 0.12)'
    },
    progress: {
      position: 'absolute',
      left: '0',
      width: '100%',
      top: '0%',
      transition: 'opacity 200ms linear'
    },
    hideProgress: {
      opacity: 0
    },
    loading: {
      opacity: 0.3
    },
    pendingDelete: {
      opacity: 0.3
    },
    root: {
      position: 'relative',
      border: 'solid 1px white',
      display: 'inline-flex',
      transition: 'opacity 200ms linear'
    },
    active: {
      border: 'solid 1px ' + theme.palette.primary.main
    },
    delete: {
      position: 'absolute',
      right: 0
    }
  };
};

exports.default = (0, _styles.withStyles)(styles)(Component);