'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InputRadio = exports.InputCheckbox = exports.InputSwitch = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _Checkbox = require('@material-ui/core/Checkbox');

var _Checkbox2 = _interopRequireDefault(_Checkbox);

var _Radio = require('@material-ui/core/Radio');

var _Radio2 = _interopRequireDefault(_Radio);

var _inputContainer = require('./input-container');

var _inputContainer2 = _interopRequireDefault(_inputContainer);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Switch = require('@material-ui/core/Switch');

var _Switch2 = _interopRequireDefault(_Switch);

var _styles = require('@material-ui/core/styles');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var InputTypes = {
  classes: _propTypes2.default.object.isRequired,
  className: _propTypes2.default.string,
  label: _propTypes2.default.string,
  checked: _propTypes2.default.bool,
  onChange: _propTypes2.default.func,
  disabled: _propTypes2.default.bool
};

var RawInputSwitch = function RawInputSwitch(_ref) {
  var classes = _ref.classes,
      className = _ref.className,
      label = _ref.label,
      checked = _ref.checked,
      onChange = _ref.onChange;

  return _react2.default.createElement(
    _inputContainer2.default,
    { className: className, label: label },
    _react2.default.createElement(_Switch2.default, {
      className: classes.switchRoot,
      checked: checked,
      onChange: onChange,
      'aria-label': label
    })
  );
};

RawInputSwitch.propTypes = _extends({}, InputTypes);

var InputSwitch = (0, _styles.withStyles)({
  switchRoot: {
    justifyContent: 'inherit',
    transform: 'translate(-20%, 20%)'
  }
})(RawInputSwitch);

var RawInputCheckbox = function RawInputCheckbox(_ref2) {
  var classes = _ref2.classes,
      className = _ref2.className,
      label = _ref2.label,
      checked = _ref2.checked,
      onChange = _ref2.onChange,
      disabled = _ref2.disabled;

  return _react2.default.createElement(
    _inputContainer2.default,
    { className: className, label: label },
    _react2.default.createElement(_Checkbox2.default, {
      className: classes.checkboxRoot,
      disabled: disabled,
      checked: checked,
      onChange: onChange,
      'aria-label': label
    })
  );
};

RawInputCheckbox.propTypes = _extends({}, InputTypes);

var RawInputRadio = function RawInputRadio(_ref3) {
  var classes = _ref3.classes,
      className = _ref3.className,
      label = _ref3.label,
      checked = _ref3.checked,
      onChange = _ref3.onChange,
      disabled = _ref3.disabled;

  return _react2.default.createElement(
    _inputContainer2.default,
    { className: className, label: label },
    _react2.default.createElement(_Radio2.default, {
      className: classes.radioRoot,
      disabled: disabled,
      checked: checked,
      onChange: onChange,
      'aria-label': label
    })
  );
};

RawInputRadio.propTypes = _extends({}, InputTypes);

var InputCheckbox = (0, _styles.withStyles)({
  checkboxRoot: {
    transform: 'translate(-25%, 20%)'
  }
})(RawInputCheckbox);

var InputRadio = (0, _styles.withStyles)(function () {
  return {
    radioRoot: {
      transform: 'translate(-20%, 20%)'
    }
  };
})(RawInputRadio);

exports.InputSwitch = InputSwitch;
exports.InputCheckbox = InputCheckbox;
exports.InputRadio = InputRadio;