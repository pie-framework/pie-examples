'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _configUi = require('@pie-lib/config-ui');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _styles = require('@material-ui/core/styles');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

const styles = theme => ({
  optionsCheckbox: {
    display: 'flex',
    flexWrap: 'wrap',
    justifyContent: 'space-between'
  },
  withLabelsContainer: {
    display: 'flex'
  },
  withLabelsRadioControl: {
    display: 'flex'
  },
  displayOptionsContainer: {
    display: 'inline-block',
    marginTop: theme.spacing.unit,
    width: '50%'
  }
});

class GeneralConfigBlock extends React.Component {

  render() {
    var _props = this.props;
    const classes = _props.classes,
          withLabels = _props.withLabels,
          config = _props.config,
          onToggleWithLabels = _props.onToggleWithLabels,
          onModelConfigChange = _props.onModelConfigChange;


    return React.createElement(
      'div',
      null,
      React.createElement(
        'div',
        { className: classes.withLabelsContainer },
        React.createElement(_configUi.InputRadio, {
          className: classes.withLabelsRadioControl,
          checked: withLabels,
          onChange: onToggleWithLabels(true),
          label: 'With Labels'
        }),
        React.createElement(_configUi.InputRadio, {
          className: classes.withLabelsRadioControl,
          checked: !withLabels,
          onChange: onToggleWithLabels(false),
          label: 'Without Labels'
        })
      ),
      React.createElement(
        'div',
        { style: { display: 'flex' } },
        withLabels && React.createElement(
          'div',
          { className: classes.displayOptionsContainer },
          React.createElement(
            'div',
            { className: classes.optionsCheckbox },
            React.createElement(_configUi.InputCheckbox, {
              label: 'Points Must Match Labels',
              checked: config.pointsMustMatchLabels,
              onChange: onModelConfigChange('pointsMustMatchLabels') })
          )
        ),
        React.createElement(
          'div',
          { className: classes.displayOptionsContainer },
          React.createElement(
            'div',
            { className: classes.optionsCheckbox },
            React.createElement(_configUi.InputCheckbox, {
              label: 'Allow Partial Scoring',
              checked: config.allowPartialScoring,
              onChange: onModelConfigChange('allowPartialScoring') })
          )
        )
      )
    );
  }
}

GeneralConfigBlock.propTypes = {
  classes: _propTypes2.default.object.isRequired,
  config: _propTypes2.default.object.isRequired,
  onToggleWithLabels: _propTypes2.default.func.isRequired,
  onModelConfigChange: _propTypes2.default.func.isRequired,
  withLabels: _propTypes2.default.bool
};
exports.default = (0, _styles.withStyles)(styles)(GeneralConfigBlock);